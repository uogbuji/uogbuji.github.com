<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xml:lang="en" xml:base="http://uche.ogbuji.net">
  <id>http://uche.ogbuji.net/feeds/publications.atom</id> 
  <title>Uche Ogbuji's publications</title>
  <link rel="self" href="http://uche.ogbuji.net/feeds/publications.atom" />
  <link rel="alternate" type="text/html" href="http://uche.ogbuji.net/publications/" />
  <subtitle>Technical only</subtitle>
  <updated>2013-10-01T12:30:01Z</updated>
  <rights>Copyright 2000-2013 Uche Ogbuji</rights>

  <!-- New entries go here -->
  <!-- Don't forget to set the updated element above when you add a new entry -->
  
  <!--
    See also:
        http://tc.eserver.org/tc.lasso?c1=searchable&-op=cn&cat=ogbuji (http://en.wikipedia.org/wiki/EServer.org)
  -->

<!--
  <entry>
    <id></id>
    <title></title>
    <subtitle></subtitle>
    <link href=""/>
    <link href="http://www.ibm.com/developerworks/i/....jpg" rel="icon" title="IBM developerWorks top story"/>
    <link href="http://www.ibm.com/developerworks/views/web/libraryview.jsp?search_by=real+web+2.0:" rel="series" title="Real Web 2.0"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="xml"/>
    <category term="tech"/>
    <updated>2006-02-17T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
      </div>
    </summary>
  </entry>

  <entry>
    <id></id>
    <title></title>
    <subtitle></subtitle>
    <link href=""/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="xml"/>
    <category term="tech"/>
    <updated>2006-02-17T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
      </div>
    </summary>
  </entry>

  <category term="outstanding!"/>

-->

<!--

  http://www.slidefinder.net/s/semantic_microformats/semantic-microformats/451355/p2

-->

  <entry>
    <id></id>
    <title></title>
    <subtitle></subtitle>
    <link href=""/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="xml"/>
    <category term="tech"/>
    <updated>2006-02-17T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
      </div>
    </summary>
  </entry>

  <entry>
    <id>http://semanticweb.com/the-art-of-linked-data-architecting-recollection_b23186</id>
    <title>The Art of Linked Data: Architecting Recollection</title>
    <subtitle></subtitle>
    <link href="http://semanticweb.com/the-art-of-linked-data-architecting-recollection_b23186"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="xml"/>
    <category term="semantic web"/>
    <category term="data visuaization"/>
    <category term="tech"/>
    <updated>2011-09-20T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">From the earliest days of computer science we’ve recognized that humans are infuriatingly sloppy, and that computers are infuriatingly precise. The Web was the first information space to scale globally in part because its architecture struck a good balance between precision and sloppiness, but also because it supported user-friendly mechanisms for consuming its nodes (pictures, embedded audio and video, scripting, etc.)  Linked Data helps codify such balanced architecture when you want a little bit more controlled context, and at Zepheira we feel that the right user-centered application basics are key to empowering users with such control of context. Recollection is an example within the cultural heritage space, but also broadly applicable, of how such systems provide value in practice.
      </div>
    </summary>
  </entry>

  <entry>
    <id>http://www.ibm.com/developerworks/industry/library/ind-datagov/</id>
    <title>Data.gov for government agencies</title>
    <subtitle>Learn about the U.S. Federal Government's tool for open data</subtitle>
    <link href="http://www.ibm.com/developerworks/industry/library/ind-datagov/"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="government"/>
    <category term="tech"/>
    <category term="data visualization"/>
    <category term="HTTP"/>
    <updated>2012-02-28T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">Because people are more aware of the value of open data, entire new economies have sprung up around its use and management. Sophisticated taxpayers often demand open access to public data from governments, and even less informed users want to know how this type of information enhances data services such as online maps and charts. In 2009, the U.S. Federal Government launched Data.gov, a site to aggregate feeds of government data. Pressure on agencies to publish information at Data.gov has been steady. The Open Government Directive of 2009 requires all Federal agencies to post at least three high-value data sets online and register them on Data.gov. In this article, learn about Data.gov, the basic information your agency needs to know to participate in this revolution in government, and ideas for doing so efficiently.
      </div>
    </summary>
  </entry>

  <entry>
    <id>http://www.ibm.com/developerworks/opensource/library/os-pypy-intro/index.html</id>
    <title>Introducing PyPy</title>
    <subtitle>An emerging implementation that combines science with practicality</subtitle>
    <link href="http://www.ibm.com/developerworks/opensource/library/os-pypy-intro/index.html"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="xml"/>
    <category term="tech"/>
    <category term="pypy"/>
    <category term="Web"/>
    <category term="python"/>
    <category term="greenlet"/>
    <category term="co-routine"/>
    <category term="programming"/>
    <category term="html"/>
    <updated>2012-02-14T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">Improve the performance of your Python development and add flexibility with PyPy with just-in-time compiler implementation. Learn about PyPy, its benefits, and how it can accelerate development of high-performance applications.
      </div>
    </summary>
  </entry>

  <entry>
    <id>https://www.ibm.com/developerworks/xml/library/x-think35/</id>
    <title>Thinking XML: Good advice for creating XML</title>
    <subtitle>Principles of XML design from the community at large</subtitle>
    <link href="https://www.ibm.com/developerworks/xml/library/x-think35/"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="xml"/>
    <category term="tech"/>
    <updated>2006-01-31T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">The use of XML has become widespread, but much of it is not well formed. When it is well formed, it's often of poor design, which makes processing and maintenance very difficult. And much of the infrastructure for serving XML can compound these problems. In response, there has been some public discussion of XML best practices, such as Henri Sivonen's document, "HOWTO Avoid Being Called a Bozo When Producing XML." Uche Ogbuji frequently discusses XML best practices on IBM developerWorks, and in this column, he gives you his opinion about the main points discussed in such articles.
      </div>
    </summary>
  </entry>

  <entry>
    <id>https://www.ibm.com/developerworks/xml/library/x-think36/</id>
    <title>Thinking XML: Review of RFC 3470: Guidelines for the use of XML</title>
    <subtitle>The IETF's take on XML best practices</subtitle>
    <link href="https://www.ibm.com/developerworks/xml/library/x-think36/"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="xml"/>
    <category term="tech"/>
    <category term="IETF"/>
    <category term="RFC"/>
    <updated>2006-04-18T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">Thinking XML author Uche Ogbuji continues with the theme of XML best practices. In the previous installment "Good advice for creating XML," you looked at XML design recommendations from experts. In this article, you'll find recommendations from the Internet Engineering Task Force (IETF), an organization whose technical papers drive most Internet protocols. The IETF's XML recommendations are gathered together in RFC 3470: "Guidelines for the Use of Extensible Markup Language (XML) within IETF Protocols.
      </div>
    </summary>
  </entry>

  <entry>
    <id>https://www.ibm.com/developerworks/xml/library/x-think37/</id>
    <title>Thinking XML: Manage XML data sets for security</title>
    <subtitle>The need for security teaches the importance of controlling what XML goes where</subtitle>
    <link href="https://www.ibm.com/developerworks/xml/library/x-think37/"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="tech"/>
    <category term="XML"/>
    <category term="security"/>
    <category term="XPath injection"/>
    <category term="XSLT"/>
    <updated>2006-07-11T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">Most developers have to learn a different playbook when they deal with XML and they're used to database technologies. XML's transparency requires a lot of care when you expose XML to applications on a network. Carelessness in this regard can lead to security breaches. Learn about the security implications of XML's transparency and how to avoid the vulnerabilities.
      </div>
    </summary>
  </entry>

  <entry>
    <id>https://www.ibm.com/developerworks/xml/library/x-think39/</id>
    <title>Thinking XML: Microformats the XML way</title>
    <subtitle>Put microformats in perspective -- when are they a good choice?</subtitle>
    <link href="https://www.ibm.com/developerworks/xml/library/x-think39/"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="xml"/>
    <category term="tech"/>
    <category term="Microformats"/>
    <category term="XOXO"/>
    <category term="html"/>
    <category term="JSON"/>
    <updated>2007-05-15T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">You might have heard about microformats, a way to embed small, specialized information within standard formats. In fact, microformats come in two types: elemental microformats, which are often quite useful, and compound microformats, which are often quite problematic. Learn about a basic approach to avoid the hacks in some compound microformats by virtue of the structure of the Web. XML, and other natural data representation technologies such as JSON, are just as viable as many of their counterparts in microformats.
      </div>
    </summary>
  </entry>

  <entry>
    <id>http://www.xml.com/pub/a/2006/04/26/microformats-grddl-rdfa-nvdl.html</id>
    <title>Microformats in Context</title>
    <subtitle></subtitle>
    <link href="http://www.xml.com/pub/a/2006/04/26/microformats-grddl-rdfa-nvdl.html"/>
    <link href="http://www.xml.com" rel="via" title="XML.com"/>
    <category term="xml"/>
    <category term="tech"/>
    <category term="Microformats"/>
    <category term="html"/>
    <category term="xhtml"/>
    <category term="Web 2.0"/>
    <updated>2006-04-26T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">There has been a lot of discussion in XML circles as to how far the extensibility revolution promised by XML can take (or has taken) us. Is XML really a tool for creating specialized languages so that information can be expressed in the most natural formats practical? Or is it just a way to reduce the burden on those who write code to consume web content (be strict in what you accept so that you can be liberal with your time spent fly-fishing). Are schema technologies a way to manage the flexibility that XML brings to the table, or just another weapon to put down users ("You don't validate. Go away")? Of course, the way I've posed these questions reveals my bias. I think that XML should be a tool for expressiveness and controlled diversity on the Web. I disagree strongly with the notion, recently expressed in a few quarters, that there are only a few viable XML formats, and that people should stop creating more. At the center of this controversy is the new Web 2.0 hotness: microformats. 
      </div>
    </summary>
  </entry>

  <entry>
    <id>https://www.ibm.com/developerworks/xml/library/x-think38/</id>
    <title>Thinking XML: The XML decade</title>
    <subtitle>Thoughts on IBM Systems Journal's retrospective of XML at ten years (or so)</subtitle>
    <link href="https://www.ibm.com/developerworks/xml/library/x-think38/"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="xml"/>
    <category term="tech"/>
    <category term="RELAX NG"/>
    <category term="COBOL"/>
    <category term="XSD"/>
    <category term="tech"/>
    <category term="ACORD"/>
    <category term="HL7"/>
    <updated>2006-11-14T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">IBM Systems Journal recently published an issue dedicated to XML's 10th anniversary. It is primarily a collection of interesting papers for XML application techniques, but some of its articles offer general discussion of the technical, economic and even cultural effects of XML. There is a lot in these papers to draw from in thinking about why XML has been successful, and what it would take for XML to continue its success. This article expands on some of these topics that are especially relevant to readers of this column.
      </div>
    </summary>
  </entry>

  <entry>
    <id>https://www.ibm.com/developerworks/xml/library/x-think40/</id>
    <title>Thinking XML: Firefox 2.0 and XML</title>
    <subtitle>Learn how the latest Firefox release updates XML processing</subtitle>
    <link href="https://www.ibm.com/developerworks/xml/library/x-think40/"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="xml"/>
    <category term="dom"/>
    <category term="OpenSearch"/>
    <category term="firefox"/>
    <category term="SAX"/>
    <category term="thinking xml"/>
    <category term="xslt"/>
    <category term="tech"/>
    <category term="web"/>
    <category term="XPCOM"/>
    <updated>2007-10-02T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">Firefox 2.0 brought several important changes in its XML support. It's currently reaching its peak in user deployment. Learn about updated XML features in Firefox 2.0, including a controversial change to the handling of RSS Web feeds.
      </div>
    </summary>
  </entry>

  <entry>
    <id>https://www.ibm.com/developerworks/xml/library/x-think41/</id>
    <title>Thinking XML: Firefox 3.0 and XML</title>
    <subtitle>The popular Web browser offers more to XML developers each release and the new 3.0 is no exception</subtitle>
    <link href="https://www.ibm.com/developerworks/xml/library/x-think41/"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="xml"/>
    <category term="dom"/>
    <category term="exslt"/>
    <category term="firefox"/>
    <category term="svg"/>
    <category term="thinking xml"/>
    <category term="xslt"/>
    <category term="tech"/>
    <category term="web"/>
    <updated>2008-07-29T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">Mozilla® continues to improve its flagship browser and the latest major release, Firefox® 3.0, offers something for just about everyone. XML developers were certainly not left out—the new version improves basic parsing, DOM, XSLT, SVG, and more. In this article, learn of the new features Firefox 3.0 offers for XML processing; pay close attention to how the added EXSLT extensions open up fresh possibilities for XSLT on the browser.
      </div>
    </summary>
  </entry>

<!--
  <entry>
    <id>http://www.ibm.com/developerworks/xml/library/x-think42/index.html</id>
    <title>Thinking XML: Enrich Schema definitions with SKOS</title>
    <subtitle>Learn how to attach concepts from the business problem domain to XML applications</subtitle>
    <link href="http://www.ibm.com/developerworks/xml/library/x-think42/index.html"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="xml"/>
    <category term="tech"/>
    <category term="SKOS"/>
    <category term="RDF"/>
    <category term="Semantic Web"/>
    <category term="schema"/>
    <category term="xsd"/>
    <category term="Turtle"/>
    <category term="outstanding!"/>
    <updated>2008-11-08T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">The things in schemata (people, places and things) are inextricably tied to how people describe them, and this is the key to alignment of business with technology. One of the most important things an XML schema designer can do is express this connection clearly. SKOS, a language well known as a component of DITA, is a very useful means for such expression. Learn how to enrich schema definitions with SKOS definitions.
      </div>
    </summary>
  </entry>
-->

  <entry>
    <id>http://www.ibm.com/developerworks/xml/library/x-think44/index.html</id>
    <title>Thinking XML: Use XML pattern tools for systems analysis</title>
    <subtitle>Combine the discipline of Operational Systems Analysis with a flexible, adaptive toolkit</subtitle>
    <link href="http://www.ibm.com/developerworks/xml/library/x-think44/index.html"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="xml"/>
    <category term="tech"/>
    <category term="analysis"/>
    <category term="business modeling"/>
    <category term="ISO Schematron"/>
    <category term="schema"/>
    <category term="service modeling language (SML)"/>
    <category term="xslt"/>
    <updated>2010-06-02T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">Systems optimization is a growing field, especially in adaptive, autonomic systems, but also in traditional information workflows. Much of the material accumulated in the monitor phase is available in some form of XML. Rather than apply complicated, monolithic analysis tools, you can benefit when you apply the pattern dispatch mechanisms inherent in XML. This saves effort and increases flexibility as it supports a library of analysis primitives that you can redeploy for high-level reports as well as fine-tuning. Learn to apply the likes of XPath and XSLT patterns much more broadly in order to support analysis and drive systems optimizations.
      </div>
    </summary>
  </entry>

  <entry>
    <id>http://www.ibm.com/developerworks/xml/library/x-think45/</id>
    <title>Thinking XML: The XML flavor of HTML5</title>
    <subtitle>6 recommendations for developers using the next generation of the web's native language</subtitle>
    <link href="http://www.ibm.com/developerworks/xml/library/x-think45/"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="xml"/>
    <category term="tech"/>
    <category term="html"/>
    <category term="xhtml"/>
    <category term="html5"/>
    <category term="web"/>
    <updated>2010-06-06T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
<p>For a while, there has been a struggle for the future of markup on the web, a struggle between the W3C's XHTML 2 and HTML5, developed by the major browser vendors under a separate organizational umbrella. First, the W3C took over HTML5, and now it recently announced the sunset of the XHTML 2 effort. This makes a significant difference to the future of XML on the web, and furthermore, because of HTML5's momentum, it is now a technology that every XML developer already has to deal with.</p>
<p>But fans of XML need not despair: HTML5 supports a proper XML serialization. Learn about the XML form of HTML5 including some key differences from older XHTML conventions and learn how to practically apply this vocabulary in modern web browsers.</p>
      </div>
    </summary>
  </entry>

  <entry>
    <id>http://semanticweb.com/the-art-of-linked-data-architecting-recollection_b23186</id>
    <title>The Art of Linked Data: Architecting Recollection</title>
    <link href="http://semanticweb.com/the-art-of-linked-data-architecting-recollection_b23186"/>
    <link href="http://semanticweb.com/" rel="via" title="Semanticweb.com"/>
    <category term="Library"/>
    <category term="tech"/>
    <category term="Python"/>
    <category term="Web services"/>
    <category term="REST"/>
    <category term="design"/>
    <updated>2011-09-20T16:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
Discussion of the architecture used to implement the Recollection Project for the US Library of Congress, and the motivatiosn for the architecture. In this column “The art of Linked Data” a few of us at Zepheira will try to bring observations, reflections and practical advice from various projects applying Linked Data and thus Semantic Web principles across diverse domains.
      </div>
    </summary>
  </entry>

  <entry>
    <id>http://www.ibm.com/developerworks/xml/library/x-think43/</id>
    <title>Thinking XML: Analyze financial reporting using XBRL</title>
    <subtitle>Learn to interpret Extensible Business Reporting Language well enough to make sense of financial filings</subtitle>
    <link href="http://www.ibm.com/developerworks/xml/library/x-think43/"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <link href="http://www.ibm.com/developerworks/views/xml/libraryview.jsp?search_by=thinking+xml:" rel="series" title="Thinking XML"/>
    <category term="XML"/>
    <category term="XBRL"/>
    <category term="Extensible Business Reporting Language"/>
    <category term="financial report"/>
    <category term="financial services"/>
    <category term="SEC"/>
    <category term="regulations"/>
    <category term="XLink"/>
    <category term="tech"/>
    <updated>2009-01-06T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">Thanks to recent events, the world turns its eyes to Wall Street. One of the hot topics is how to increase the transparency of descriptions of business activity and financial results. The financial sector and the SEC have long approached this problem with XBRL, an XML language for business reports. XBRL uses a variety of XML technologies, including XLink to provide rich detail for financial information. Learn to interpret and analyze financial report information in XBRL, using an actual U.S. Securities and Exchange Commission report as an example.
      </div>
    </summary>
  </entry>

  <entry>
    <id>http://www.ibm.com/developerworks/xml/library/x-think42/</id>
    <title>Thinking XML: Enrich Schema definitions with SKOS</title>
    <subtitle>Learn how to attach concepts from the business problem domain to XML applications</subtitle>
    <link href="http://www.ibm.com/developerworks/xml/library/x-think42/"/>
    <link href="http://www.ibm.com/developerworks/i/....jpg" rel="icon" title="IBM developerWorks top story"/>
    <link href="http://www.ibm.com/developerworks/views/xml/libraryview.jsp?search_by=thinking+xml:" rel="series" title="Thinking XML"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="xml"/>
    <category term="thinking xml"/>
    <category term="skos"/>
    <category term="rdf"/>
    <category term="turtle"/>
    <category term="xslt"/>
    <category term="tech"/>
    <category term="schema"/>
    <category term="semantic web"/>
    <category term="standout!"/>
    <updated>2008-11-11T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">The things in schemata (people, places and things) are inextricably tied to how people describe them, and this is the key to alignment of business with technology. One of the most important things an XML schema designer can do is express this connection clearly. SKOS, a language well known as a component of DITA, is a very useful means for such expression. Learn how to enrich schema definitions with SKOS definitions.
      </div>
    </summary>
  </entry>

  <entry>
    <id>http://www.ibm.com/developerworks/web/library/wa-realweb9/</id>
    <title>Real Web 2.0: The Wikipedia family</title>
    <subtitle>Enrich your Web site with the lesser-known fruits of the Wikimedia project</subtitle>
    <link href="http://www.ibm.com/developerworks/web/library/wa-realweb9/"/>
<!--    
    <link href="http://www.ibm.com/developerworks/i/t-wa-f-.jpg" rel="icon" title="IBM developerWorks top story"/>
-->    
    <link href="http://www.ibm.com/developerworks/views/web/libraryview.jsp?search_by=real+web+2.0:" rel="series" title="Real Web 2.0"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="XML"/>
    <category term="real web 2"/>
    <category term="javascript"/>
    <category term="web"/>
    <category term="search"/>
    <category term="browser"/>
    <category term="tech"/>
    <category term="wikipedia"/>
    <category term="wikimedia"/>
    <category term="wiktionary"/>
    <updated>2008-11-04T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">You know Wikipedia, but do you know of the dozens of related sites that provide user-generated content that is just as valuable? Many of the related sites under the Wikipedia umbrella are very useful to Web developers. Learn how to enrich your information space with resources beyond Wikipedia, including examples of widgets applying data from these sites.
      </div>
    </summary>
  </entry>

  <entry>
    <id>http://www.semanticweb.com/article.php/3777401</id>
    <title>Convergence Coming for Cloud Computing, Semantic Web</title>
    <link href="http://www.semanticweb.com/article.php/3777401"/>
    <link href="http://www.semanticweb.com" rel="via" title="semanticweb.com"/>
    <category term="Semantic technology"/>
    <category term="Semantic Web"/>
    <category term="cloud computing"/>
    <category term="tech"/>
    <updated>2008-10-10T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">Cloud computing is yet another one of those old realities repackaged as a new idea, with a fancy new buzzword... One of the first benefits from improving the context of information flowing through the Web is to make rich services available on the Web. Back in 1997 a Scientific American article by Tim Berners-Lee and other Semantic Web pioneers outlined the ambitions of the technology. The article highlighted a scenario of complex personal travel coordination -- a utopia of cloud computing as well as Semantic Web. In the scenario the various information and action components to fulfill the task were assembled from a variety of sources and providers in an opportunistic way.....
      </div>
    </summary>
  </entry>

  <entry>
    <id>http://www.ibm.com/developerworks/edu/x-dw-x-odfintro.html</id>
    <title>Introducing OpenDocument</title>
    <subtitle>Become acquainted with OpenDocument Format for Office Applications (ODF) [requires free registration]</subtitle>
    <link href="http://www.ibm.com/developerworks/edu/x-dw-x-odfintro.html"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="XML"/>
    <category term="OpenDocument"/>
    <category term="ODF"/>
    <category term="OASIS"/>
    <category term="word processor"/>
    <category term="spreadsheet"/>
    <category term="ISO/IEC 26300"/>
    <category term="OpenOffice.org"/>
    <category term="Lotus Symphony"/>
    <category term="tech"/>
    <updated>2008-07-22T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">The OASIS Open Document Format for Office Applications (ODF) is an XML standard that lets you store and exchange office application documents, including word-processor, spreadsheet, and presentation files. Whether you try to perform special tasks on files saved from such applications or work on applications to process such files, you should become familiar with this important format. Learn about the two possible forms of OpenDocument files, as multipart packages and as single XML documents, and learn how to structure text and tabular information in OpenDocument.
      </div>
    </summary>
  </entry>

  <entry>
    <id>http://www.ibm.com/developerworks/web/library/wa-realweb8/</id>
    <title>Real Web 2.0: Mastering the Creative Commons</title>
    <link href="http://www.ibm.com/developerworks/web/library/wa-realweb8/"/>
    <link href="http://www.ibm.com/developerworks/i/t-wa-f-creativecommons.jpg" rel="icon" title="IBM developerWorks top story"/>
    <link href="http://www.ibm.com/developerworks/views/web/libraryview.jsp?search_by=real+web+2.0:" rel="series" title="Real Web 2.0"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="XML"/>
    <category term="tech"/>
    <updated>2008-10-07T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">The Creative Commons (CC) initiative develops popular licenses for content, including Web content. Some people think using these licenses means giving up all your rights to content, but this is just one of many misconceptions. Learn how to choose and use CC licenses for your Web sites and applications and how to process these licenses in code.
      </div>
    </summary>
  </entry>

  <entry>
    <id>http://www.ibm.com/developerworks/web/library/wa-realweb7/index.html</id>
    <title>Real Web 2.0: Open, geographic information systems at Geonames.org</title>
    <link href="http://www.ibm.com/developerworks/web/library/wa-realweb7/index.html"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="XML"/>
    <category term="tech"/>
    <updated>2008-09-30T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">One of the best sources for geographical information for users and developers is a shining example of the power of open data. GeoNames is a database, Web service, and destination site for all things geographical. It has a rich, RESTful API and offers Semantic Web features using Linking Open Data conventions. Learn how to use GeoNames, as a user and as a developer.
      </div>
    </summary>
  </entry>

  <entry>
    <id>http://www.ibm.com/developerworks/web/library/wa-annotate/index.html</id>
    <title>Annotating the Web with Atom</title>
    <link href="http://www.ibm.com/developerworks/web/library/wa-annotate/index.html"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="XML"/>
    <category term="tech"/>
    <updated>2008-07-08T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <author>
      <name>Eric Larson</name>
      <uri>http://ionrock.org</uri>
      <email>eric@ionrock.org</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">You've seen reader comments on weblogs and other Web 2.0 sites, but the Atom protocol makes it possible to create and manage such comments in a very flexible way. Flexible Web annotations is an idea that will open up an entirely new class of Web applications with very little actual new invention. Learn how to create a system to manage annotations for anything on the Web, from nearly anywhere.
      </div>
    </summary>
  </entry>

  <entry>
    <id>http://www.ibm.com/developerworks/web/library/wa-ffox3/</id>
    <title>Get ready for Firefox 3.0</title>
    <subtitle>A Web developer's guide to the many new features in this popular browser, especially the offline application features</subtitle>
    <link href="http://www.ibm.com/developerworks/web/library/wa-ffox3/"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="xml"/>
    <category term="Mozilla"/>
    <category term="Firefox 3.0"/>
    <category term="Web browser"/>
    <category term="XHTML"/>
    <category term="Web development"/>
    <category term="JavaScript"/>
    <category term="tech"/>
    <updated>2008-06-26T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">Mozilla Firefox 3 is a major release with many enhancements, some of which are targeted at users, and some at developers. One of the most interesting updates gives Web developers the ability to build Web applications that work even when the user is disconnected from the Internet. Use this article to learn more about these new Firefox 3 features, especially the new offline application support.
      </div>
    </summary>
  </entry>

  <entry>
    <id>http://www.ibm.com/developerworks/webservices/library/ws-soa-proarch3/</id>
    <title>The professional architect: Part 3: The business case for enterprise data architecture</title>
    <subtitle>How to win sponsorship for sound architecture by using metrics and other tools</subtitle>
    <link href="http://www.ibm.com/developerworks/webservices/library/ws-soa-proarch3/"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="professional architect"/>
    <category term="metrics"/>
    <category term="business case"/>
    <category term="enterprise"/>
    <category term="tech"/>
    <updated>2008-06-17T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">Good enterprise data architecture requires adherence to a new type of discipline—and an extensive array of IT and business resources—in order to earn the needed commitment from your sponsoring organization. By understanding the overall landscape of affected applications and gathering useful metrics, you can make this commitment easier to achieve. In this article, I'll describe how to communicate the value of enterprise data architecture, and how to keep on track and deliver what you promised.
      </div>
    </summary>
  </entry>

  <entry>
    <id>http://semanticweb.com/building-effective-relationships-in-software_b10087</id>
    <title>Building Effective Relationships in Software</title>
    <link href="http://semanticweb.com/building-effective-relationships-in-software_b10087"/>
    <link href="http://semanticweb.com" rel="via" title="Semanticweb.com"/>
    <category term="xml"/>
    <category term="tech"/>
    <updated>2008-01-15T15:35:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
One of the many factors that led to the success of the Web was in how it defined links in a very simple manner, which encouraged cross-referencing. In the last two installments of this column, I’ve discussed the importance of the identifiers of the Web: URIs. The Web’s native document element, HTML, made it easy to connect one URI to another, and so relationships between documents could grow regardless of who controlled the documents. This of course meant that sometimes such links would break, signaled by the infamous 404 "Not Found" code. Purists of hypertext, the discipline of strongly linked documents, disliked this fragility, but the Web grew, and continues to grow so fantastically, precisely because of the power of simple links needing no strong system of control....
      </div>
    </summary>
  </entry>

  <entry>
    <id>http://semanticweb.com/building-effective-relationships-in-software_b10087</id>
    <title>Universal Identifiers for the Enterprise</title>
    <link href="http://semanticweb.com/building-effective-relationships-in-software_b10087"/>
    <link href="http://semanticweb.com" rel="via" title="Semanticweb.com"/>
    <category term="Web"/>
    <category term="tech"/>
    <category term="REST"/>
    <category term="design"/>
    <updated>2007-11-26T14:35:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
I started this column with the message that "the future of the Web is: identifiers, relationships and services." Identifiers are the magic gear that make the others work, and so, having in the previous article introduced the role of identifiers in the Internet, I’ll expand on the theme to discuss how important identifiers are, even in an organizational setting....
      </div>
    </summary>
  </entry>

  <entry>
    <id>http://semanticweb.com/identifiers-are-at-the-heart-of-information-technology_b10053</id>
    <title>Identifiers Are at the Heart of Information Technology</title>
    <link href="http://semanticweb.com/identifiers-are-at-the-heart-of-information-technology_b10053"/>
    <link href="http://semanticweb.com" rel="via" title="Semanticweb.com"/>
    <category term="Web"/>
    <category term="tech"/>
    <category term="REST"/>
    <category term="design"/>
    <updated>2007-10-04T19:41:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
Identifiers have been around since the dawn of the computer age. They are special tokens used to keep track of anything that’s processed in computers. For ages no one cared about identifiers except for technologists. This all changed with the advent of the Internet....
      </div>
    </summary>
  </entry>

  <entry>
    <id>http://semanticweb.com/the-future-of-the-web-is_b10041</id>
    <title>The Future of the Web Is</title>
    <link href="http://semanticweb.com/the-future-of-the-web-is_b10041"/>
    <link href="http://semanticweb.com" rel="via" title="Semanticweb.com"/>
    <category term="Web"/>
    <category term="tech"/>
    <category term="REST"/>
    <category term="design"/>
    <updated>2007-08-13T13:14:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
The future of the Web is: identifiers, relationships and services. Ever since the Web changed the way people deal with data there has been competition to take the information age to the next step....
      </div>
    </summary>
  </entry>

  <entry>
    <id>http://www.ibm.com/developerworks/web/library/wa-xul2/</id>
    <title>Browser extensions using XUL, Part 2: Assemble a cross-platform Firefox extension</title>
    <subtitle></subtitle>
    <link href="http://www.ibm.com/developerworks/web/library/wa-xul2/"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="xml"/>
    <category term="xul"/>
    <category term="javascript"/>
    <category term="css"/>
    <category term="dom"/>
    <category term="mozilla"/>
    <category term="browser extensions"/>
    <category term="firefox"/>
    <category term="tech"/>
    <updated>2007-10-16T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">XUL is a surprisingly easy way to build cross-platform browser extensions or even stand-alone applications. Discover how to build powerful, flexible Mozilla browser extensions that go beyond the capabilities of other tools like embedded scripting languages or CGI—because they're built right into the user's browser.
      </div>
    </summary>
  </entry>

  <entry>
    <id>http://www.ibm.com/developerworks/web/library/wa-xul1/</id>
    <title>Browser extensions using XUL, Part 1: Create a Firefox browser extension with user-interface features</title>
    <subtitle></subtitle>
    <link href="http://www.ibm.com/developerworks/web/library/wa-xul1/"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="xml"/>
    <category term="xul"/>
    <category term="javascript"/>
    <category term="css"/>
    <category term="dom"/>
    <category term="mozilla"/>
    <category term="browser extensions"/>
    <category term="firefox"/>
    <category term="tech"/>
    <updated>2007-10-02T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">Create extensions that go beyond the built-in capabilities of Web browsers. The Mozilla project's XUL engine is a user-interface language that you can use to extend Mozilla browsers, or to build stand-alone applications. XUL is a surprisingly easy way to build cross-platform browser extensions, and this pair of articles demonstrates how. 
      </div>
    </summary>
  </entry>

  <entry>
    <id>http://www.ibm.com/developerworks/web/library/wa-realweb4/</id>
    <title>Real Web 2.0: Wikipedia, champion of user-generated content</title>
    <subtitle>How Wikipedia encourages users to contribute content</subtitle>
    <link href="http://www.ibm.com/developerworks/web/library/wa-realweb4/"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <link href="http://www.ibm.com/developerworks/views/web/libraryview.jsp?search_by=real+web+2.0:" rel="series" title="Real Web 2.0"/>
    <category term="wikipedia"/>
    <category term="user-generated content"/>
    <category term="web feed"/>
    <category term="policy"/>
    <category term="community"/>
    <category term="tech"/>
    <updated>2007-09-04T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">Encourage user contribution to your Web site by learning from Wikipedia. Wikipedia builds on open source and respects the geographical variety and potential accessibility needs of its users. It provides tools to help users contribute, but also fosters an atmosphere where contributions are verified and discussed by the broader community. 
      </div>
    </summary>
  </entry>

  <entry>
    <id>http://www.ibm.com/developerworks/library/x-increfeed.html</id>
    <title>Fast incremental updates of XML records</title>
    <link href="http://www.ibm.com/developerworks/library/x-increfeed.html"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="XML"/>
    <category term="unix"/>
    <category term="c14n"/>
    <category term="canonical"/>
    <category term="diff"/>
    <category term="python"/>
    <category term="amara"/>
    <category term="tech"/>
    <updated>2007-08-28T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">XML is often used today as a data export and exchange format. In such cases, you might deal with a feed of XML records; sometimes, if this feed, is too long, there are performance problems importing it into another system. As such, you might want to produce only an incremental feed—that is, one that only includes items that have changed. This article presents a collection of simple techniques that you can combine into a system for more digestible feeds containing only updated records.
      </div>
    </summary>
  </entry>

  <entry>
    <id>http://www.ibm.com/developerworks/webservices/library/ws-soa-proarch2/</id>
    <title>The professional architect, Part 2: Overcoming professional challenges in data architecture</title>
    <link href="http://www.ibm.com/developerworks/webservices/library/ws-soa-proarch2/"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="tech"/>
    <category term="data architect"/>
    <category term="data model"/>
    <category term="data flow"/>
    <category term="software architect"/>
    <category term="professional development"/>
    <updated>2007-08-07T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">Explore obstacles that data architects often experience and learn strategies to work beyond them in this article. Build from small successes that begin with bridging departmental application data models to creating full enterprise integration projects. Apply these approaches to other types of software architecture, to enable your IT team to more efficiently handle changing requirements and IT approaches.
      </div>
    </summary>
  </entry>

  <entry>
    <id>http://www.ibm.com/developerworks/web/library/wa-realweb3/index.html</id>
    <title>Real Web 2.0: Quick and dirty Web applications with bookmarklets</title>
    <link href="http://www.ibm.com/developerworks/web/library/wa-realweb3/index.html"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <link href="http://www.ibm.com/developerworks/views/web/libraryview.jsp?search_by=real+web+2.0:" rel="series" title="Real Web 2.0"/>
    <category term="XML"/>
    <category term="real web 2"/>
    <category term="javascript"/>
    <category term="web"/>
    <category term="search"/>
    <category term="browser"/>
    <category term="tech"/>
    <updated>2007-08-07T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">Web 2.0 is well known for the fact that it's not built on breathtaking new inventions, but rather on renewed emphasis on age-old Web technologies. One of those age-old technologies that is enjoying a revival in Web 2.0 is bookmarklets. A bookmarklet is essentially a Web application shoehorned into a regular browser bookmark. This article includes a fully functioning bookmarklet and installation instructions you can use to highlight text on any Web page and search IBM developerWorks for that text.
      </div>
    </summary>
  </entry>

  <entry>
    <id>http://www.ibm.com/developerworks/library/ws-soa-proarch1.html</id>
    <title>The professional architect, Part 1: How developers become architects</title>
    <link href="http://www.ibm.com/developerworks/library/ws-soa-proarch1.html"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="IT architect"/>
    <category term="software architect"/>
    <category term="professional development"/>
    <category term="tech"/>
    <updated>2006-11-09T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">Many architects come from the ranks of good developers, but not every good developer wants to be an architect, nor are all of them suited for the role. Whether you're a developer contemplating a career shift or a manager looking for suitable candidates for an architectural responsibility, it's important to have a well-informed perspective on this transition. This article discusses the journey from implementation specialization to architecture.
      </div>
    </summary>
  </entry>

  <entry>
    <id>http://www.ibm.com/developerworks/web/library/wa-realweb2/index.html</id>
    <title>Real Web 2.0: Meet digg.com and Reddit, heirs of Slashdot</title>
    <link href="http://www.ibm.com/developerworks/web/library/wa-realweb2/index.html"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <link href="http://www.ibm.com/developerworks/views/web/libraryview.jsp?search_by=real+web+2.0:" rel="series" title="Real Web 2.0"/>
    <category term="XML"/>
    <category term="realweb2"/>
    <category term="web"/>
    <category term="firefox"/>
    <category term="browser"/>
    <category term="greasemonkey"/>
    <category term="mashup"/>
    <category term="tech"/>
    <updated>2006-06-26T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">Explore the user and developer features that make up a modern Web news site. digg.com and Reddit are popular sites, both as destinations in themselves and as sources for mashups and other ways to provide customized experiences to users. Examine an example customization of Reddit using the Greasemonkey extension for Mozilla Firefox.
      </div>
    </summary>
  </entry>

  <entry>
    <id>http://www-128.ibm.com/developerworks/library/wa-realweb1/</id>
    <title>Real Web 2.0: Bookmarks? Tagging? Delicious!</title>
    <link href="http://www-128.ibm.com/developerworks/library/wa-realweb1/"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <link href="http://www.ibm.com/developerworks/views/web/libraryview.jsp?search_by=real+web+2.0:" rel="series" title="Real Web 2.0"/>
    <category term="XML"/>
    <category term="realweb2"/>
    <category term="web"/>
    <category term="python"/>
    <category term="amara"/>
    <category term="javascript"/>
    <category term="json"/>
    <category term="tech"/>
    <updated>2006-10-26T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">In this article, you'll learn how to work with del.icio.us, one of the classic Web 2.0 sites, using Web XML feeds and JSON, in Python and ECMAScript. When you think of Web 2.0 technology, you might think of the latest Ajax tricks, but that is just a small part of the picture. More fundamental concerns are open data, simple APIs, and features that encourage users to form social networks. These are also what make Web 2.0 a compelling problem for Web architects. This column will look more than skin deep at important real-world Web 2.0 sites and demonstrate how Web architects can incorporate the best from the Web into their own Web sites.
      </div>
    </summary>
  </entry>

  <entry>
    <id>http://www-128.ibm.com/developerworks/web/library/wa-wsgi/</id>
    <title>Mix and match Web components with Python WSGI</title>
    <link href="http://www-128.ibm.com/developerworks/web/library/wa-wsgi/"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="XML"/>
    <category term="python"/>
    <category term="web"/>
    <category term="4Suite"/>
    <category term="xhtml"/>
    <category term="tech"/>
    <updated>2006-08-22T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">Learn to create and reuse components in your Web server using Python. The Python community created the Web Server Gateway Interface (WSGI), a standard for creating Python Web components that work across servers and frameworks. It provides a way to develop Web applications that take advantage of the many strengths of different Web tools. This article introduces WSGI and shows how to develop components that contribute to well-designed Web applications.
      </div>
    </summary>
  </entry>

  <entry>
    <id>http://www-128.ibm.com/developerworks/library/x-tipdatauri.html</id>
    <title>Tip: Use data URIs to include media in XML</title>
    <link href="http://www-128.ibm.com/developerworks/library/x-tipdatauri.html"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="XML"/>
    <category term="URI"/>
    <category term="HTML"/>
    <category term="tech"/><updated>2006-02-17T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">There are many ways to link to non-XML content within XML, including binary content. Sometimes you need to roll all such external content directly into the XML. Data scheme URIs are one way to specify a full resource within a URI, which you can then use in XML constructs. In this tip, Uche Ogbuji shows how to use this to bundle related media into a single file.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www.xml.com/pub/a/2006/01/25/scripting-flickr-with-python-and-rest.html</id>
    <title>Agile Web [column]: Scripting Flickr with Python and REST</title>
    <link href="http://www.xml.com/pub/a/2006/01/25/scripting-flickr-with-python-and-rest.html"/>
    <link href="http://www.xml.com" rel="via" title="XML.com"/>
    <category term="XML"/>
    <category term="Python"/>
    <category term="Web"/>
    <category term="tech"/><updated>2006-01-25T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">In his latest Agile Web column, Uche Ogbuji shows us how to use Python to interact with Flickr as a lightweight web service.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www.ibm.com/developerworks/xml/library/x-think34.html</id>
    <title>Thinking XML 34 [column]: Search engine enhancement using the XML WordNet server system</title>
    <link href="http://www.ibm.com/developerworks/xml/library/x-think34.html"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="XML"/>
    <category term="WordNet"/>
    <category term="Python"/>
    <category term="XSLT"/>
    <category term="Web"/>
    <category term="CherryPy"/>
    <category term="tech"/><updated>2005-12-31T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">In previous installments of this column, Uche Ogbuji introduced the WordNet natural language database, and showed how to represent database nodes as XML and serve this XML though the Web. In this article, he shows how to convert this XML to an RDF representation, and how to use the WordNet XML server to enrich search engine technology.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www-128.ibm.com/developerworks/edu/x-dw-x-atomxsl-i.html</id>
    <title>Process Atom 1.0 with XSLT [tutorial]</title>
    <link href="http://www-128.ibm.com/developerworks/edu/x-dw-x-atomxsl-i.html"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="XML"/>
    <category term="XHTML"/>
    <category term="XSLT"/>
    <category term="Atom"/>
    <category term="HTML"/>
    <category term="tech"/><updated>2005-12-12T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">Learn XSLT techniques for processing Atom documents. In this tutorial, author Uche Ogbuji shows how with real-world use cases. (free registration required).
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www.xml.com/pub/a/2005/12/07/handling-atom-text-and-content-constructs.html</id>
    <title>Agile Web [column]: Handling Atom Text and Content Constructs</title>
    <link href="http://www.xml.com/pub/a/2005/12/07/handling-atom-text-and-content-constructs.html"/>
    <link href="http://www.xml.com" rel="via" title="XML.com"/>
    <category term="XML"/>
    <category term="Atom"/>
    <category term="Python"/>
    <category term="tech"/><updated>2005-12-07T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">Uche Ogbuji's Agile Web column returns with a look at handling some of the trickier issues in the Atom Syndication Format, which has recently become RFC 4287, an internet standard.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www-128.ibm.com/developerworks/library/x-tiprng.html</id>
    <title>Tip: Use the right pattern for simple text in RELAX NG</title>
    <link href="http://www-128.ibm.com/developerworks/library/x-tiprng.html"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="XML"/>
    <category term="RELAX NG"/>
    <category term="tech"/><updated>2005-11-02T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">The RELAX NG XML schema language allows you to say "permit some text here" in a variety of ways. Whether you're writing patterns for elements or attributes, it is important to understand the nuances between the different patterns for character data. In this tip, Uche Ogbuji discusses the basic foundations for text in RELAX NG.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www.xml.com/pub/a/2005/10/26/google-site-maps.html</id>
    <title>Agile Web [column]: Google Sitemaps</title>
    <link href="http://www.xml.com/pub/a/2005/10/26/google-site-maps.html"/>
    <link href="http://www.xml.com" rel="via" title="XML.com"/>
    <category term="XML"/>
    <category term="Python"/>
    <category term="Web"/>
    <category term="tech"/><updated>2005-10-26T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">Uche Ogbuji's new XML.com column, "Agile Web," explores the intersection of agile programming languages and Web 2.0. In this first installment he examines Google's Sitemaps schema, as well as Python and XSLT code to generate site maps.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www.ibm.com/developerworks/xml/library/x-think33/</id>
    <title>Thinking XML 33 [column]: Serving up WordNet as XML</title>
    <link href="http://www.ibm.com/developerworks/xml/library/x-think33/"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="XML"/>
    <category term="WordNet"/>
    <category term="Python"/>
    <category term="XSLT"/>
    <category term="Web"/>
    <category term="CherryPy"/>
    <category term="tech"/><updated>2005-08-30T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">A few articles back, Uche Ogbuji discussed WordNet 2.0, a Princeton University project that aims to build a database of English words and lexical relationships between them. He showed how to extract XML serializations from the word database. In this article he continues the exploration, demonstrating code to serve up these WordNet/XML documents over Web protocols and showing you how to access these from XSLT.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www-128.ibm.com/developerworks/xml/library/x-ffox15.html</id>
    <title>XML in Firefox 1.5, Part 1: Overview of XML features</title>
    <link href="http://www-128.ibm.com/developerworks/xml/library/x-ffox15.html"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="XML"/>
    <category term="XSLT"/>
    <category term="Web"/>
    <category term="SVG"/>
    <category term="XForms"/>
    <category term="XHTML"/>
    <category term="tech"/><updated>2005-08-20T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">The open source Firefox Web browser continues to grow in popularity. Users like the security and convenience features it offers. Developers like the Firefox attention to standards compliance, inherited from its Mozilla roots. The most recent version, Firefox 1.5 (currently in beta), comes with many features for XML developers, including XML parsing, XHTML, CSS, XSLT, SVG, XML Events in JavaScript[TM], and XForms. Additional third-party extensions provide even more XML support. In this article, Uche Ogbuji provides an overview of XML features in Firefox 1.5.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www-128.ibm.com/developerworks/xml/library/x-tipcount.html</id>
    <title>Tip: Computing word count in XML documents</title>
    <link href="http://www-128.ibm.com/developerworks/xml/library/x-tipcount.html"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="XML"/>
    <category term="XSLT"/>
    <category term="EXSLT"/>
    <category term="UNIX"/>
    <category term="tech"/><updated>2005-09-29T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
XML is text and yet more than just text -- sometimes you want to work with just the content rather than the tags and other markup. In this tip, Uche Ogbuji demonstrates simple techniques for counting the words in XML content using XSLT with or without additional tools.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www.xml.com/pub/a/2005/09/14/processing-atom-in-python.html</id>
    <title>Python &amp; XML [column]: Processing Atom 1.0</title>
    <link href="http://www.xml.com/pub/a/2005/09/14/processing-atom-in-python.html"/>
    <link href="http://www.xml.com" rel="via" title="XML.com"/>
    <category term="XML"/>
    <category term="Python"/>
    <category term="Amara"/>
    <category term="data bindings"/>
    <category term="Universal feed parser"/>
    <category term="minidom"/>
    <category term="tech"/><updated>2005-09-14T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">In his final Python-XML column, Uche Ogbuji shows us three ways to process Atom 1.0 feeds in Python.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www.ibm.com/developerworks/edu/x-dw-x-xhtml-i.html</id>
    <title>XHTML, step-by-step [tutorial]</title>
    <link href="http://www.ibm.com/developerworks/edu/x-dw-x-xhtml-i.html"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="XML"/>
    <category term="XHTML"/>
    <category term="XSLT"/>
    <category term="CSS"/>
    <category term="HTML"/>
    <category term="tech"/><updated>2005-09-06T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">Get started working with Extensible Hypertext Markup Language. XHTML is a language based on HTML, but expressed in well-formed XML. But XHTML is much more than just regularizing tags and characters -- XHTML can alter the way you approach Web design. This tutorial gives step-by-step instruction for developers familiar with HTML who want to learn how to use XHTML in practical Web sites.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www.xml.com/pub/a/2005/08/24/py-xml.html</id>
    <title>Python &amp; XML [column]: Should Python and XML Coexist?</title>
    <link href="http://www.xml.com/pub/a/2005/08/24/py-xml.html"/>
    <link href="http://www.xml.com" rel="via" title="XML.com"/>
    <category term="XML"/>
    <category term="Python"/>
    <category term="Java"/>
    <category term="tech"/><updated>2005-08-24T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">In his latest Python and XML column, Uche Ogbuji claims that the costs of using XML as a little language in a Python application may outweigh the benefits of doing so.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www.adtmag.com/article.asp?id=11393</id>
    <title>Perspective on XML: Does XML give away the keys to the data warehouse?</title>
    <link href="http://www.adtmag.com/article.asp?id=11393"/>
    <link href="http://adtmag.com" rel="via" title="Application Development Trends"/>
    <category term="XML"/>
    <category term="security"/>
    <category term="XPath injection"/>
    <category term="data warehouse"/>
    <category term="tech"/>
    <updated>2005-08-01T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
Discussion of XPath injection attacks and what they teach us about the security of XML-based systems.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www.xml.com/pub/a/2005/07/27/py-xml.html</id>
    <title>Python &amp; XML [column]: EaseXML: A Python Data-Binding Tool</title>
    <link href="http://www.xml.com/pub/a/2005/07/27/py-xml.html"/>
    <link href="http://www.xml.com" rel="via" title="XML.com"/>
    <category term="XML"/>
    <category term="Python"/>
    <category term="EaseXML"/>
    <category term="data bindings"/>
    <category term="tech"/><updated>2005-07-27T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">In this month's Python and XML column, Uche Ogbuji examines a new XML data-binding tool for Python: EaseXML.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www.ibm.com/developerworks/xml/library/x-think32.html</id>
    <title>Thinking XML 32 [column]: Schema annotation for bottom-up semantic transparency</title>
    <link href="http://www.ibm.com/developerworks/xml/library/x-think32.html"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="XML"/>
    <category term="modeling"/>
    <category term="Schematron"/>
    <category term="RELAX NG"/>
    <category term="tech"/><updated>2005-07-14T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">Learn more about the different approaches to semantic transparency as Uche Ogbuji discusses what they mean to developers using XML. Whether or not you reuse schemata, you might find it valuable to use formal annotations (as opposed to the informal annotations covered earlier). You gain benefits on several levels by doing so. On the most immediately practical level, you can generate better documentation. A more far-sighted benefit is that it gives you an important measure of semantic transparency. This installment discusses semantic anchors, and gives examples. The author also takes a moment to discuss The XTech Conference 2005.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www.ibm.com/developerworks/edu/x-dw-x-xmlcss3-i.html</id>
    <title>Use Cascading Stylesheets to display XML, Part 3 [tutorial]</title>
    <link href="http://www.ibm.com/developerworks/edu/x-dw-x-xmlcss3-i.html"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="XML"/>
    <category term="CSS"/>
    <category term="XSLT"/>
    <category term="tech"/><updated>2005-06-01T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">CSS isn't just for HTML anymore! Learn to combine the strengths of CSS with those of XSLT and fine-tune your XML presentation in a browser.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www.ibm.com/developerworks/edu/x-dw-x-xmlcss2-i.html</id>
    <title>Use Cascading Stylesheets to display XML, Part 2 [tutorial]</title>
    <link href="http://www.ibm.com/developerworks/edu/x-dw-x-xmlcss2-i.html"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="XML"/>
    <category term="CSS"/>
    <category term="tech"/><updated>2005-02-01T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml"/>
    </summary>
  </entry>
  <entry>
    <id>http://www.ibm.com/developerworks/edu/x-dw-x-xmlcss-i.html</id>
    <title>Use Cascading Stylesheets to display XML, Part 1 [tutorial]</title>
    <link href="http://www.ibm.com/developerworks/edu/x-dw-x-xmlcss-i.html"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="XML"/>
    <category term="CSS"/>
    <category term="tech"/><updated>2004-11-01T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml"/>
    </summary>
  </entry>
  <entry>
    <id>http://www.xml.com/pub/a/2005/06/15/py-xml.html</id>
    <title>Python &amp; XML [column]: More Unicode Secrets</title>
    <link href="http://www.xml.com/pub/a/2005/06/15/py-xml.html"/>
    <link href="http://www.xml.com" rel="via" title="XML.com"/>
    <category term="XML"/>
    <category term="Python"/>
    <category term="Unicode"/>
    <category term="tech"/><updated>2005-06-15T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">In this month's Python and XML column, Uche Ogbuji continues his discussion of Unicode secrets with regard to XML processing in Python, especially BOMs and stream objects.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www.xml.com/pub/a/2005/05/18/unicode.html</id>
    <title>Python &amp; XML [column]: Unicode Secrets</title>
    <link href="http://www.xml.com/pub/a/2005/05/18/unicode.html"/>
    <link href="http://www.xml.com" rel="via" title="XML.com"/>
    <category term="XML"/>
    <category term="Python"/>
    <category term="Unicode"/>
    <category term="tech"/><updated>2005-05-18T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">In his latest Python-XML column, Uche Ogbuji delves broadly and deeply into the world of Unicode, especially with regard to processing XML in Python.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www-128.ibm.com/developerworks/xml/library/x-eleord.html</id>
    <title>Principles of XML design: When the order of XML elements matters</title>
    <link href="http://www-128.ibm.com/developerworks/xml/library/x-eleord.html"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="XML"/>
    <category term="elements"/>
    <category term="design"/>
    <category term="order"/>
    <category term="tech"/><updated>2005-05-05T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">When multiple XML elements occur within another element, does element order matter? Whether it's the order in which the parser reports elements to applications, or the question of whether or not to mandate specific order in schema patterns, things are not always as simple as they may seem. In this article, Uche Ogbuji covers design and processing considerations related to the order of XML elements.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www.xml.com/pub/a/2005/04/20/py-xml.html</id>
    <title>Python &amp; XML [column]: Making Old Things New Again</title>
    <link href="http://www.xml.com/pub/a/2005/04/20/py-xml.html"/>
    <link href="http://www.xml.com" rel="via" title="XML.com"/>
    <category term="XML"/>
    <category term="Python"/>
    <category term="Amara"/>
    <category term="4Suite"/>
    <category term="tech"/><updated>2005-04-20T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">In his latest Python and XML column, Uche Ogbuji examines some of the new XML document creation features in Amara and 4Suite.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www.ibm.com/developerworks/xml/library/x-think31.html</id>
    <title>Thinking XML 31 [column]: Schema standardization for top-down semantic transparency</title>
    <link href="http://www.ibm.com/developerworks/xml/library/x-think31.html"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="XML"/>
    <category term="modeling"/>
    <category term="tech"/><updated>2005-04-08T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">This installment continues the review of the many different approaches to semantic transparency, discussing what they mean to the developer using XML. One way to save resources on a long journey is to hitchhike. In XML, you can take advantage of countless open schema initiatives that, in effect, use schema standardization for top-down semantic transparency. But it's not all a free ride. In this article, Uche Ogbuji looks at the advantages and disadvantages of third-party schema reuse. He also takes a moment to discuss The Semantic Technology Conference 2005, and respond to some recent discussion on the difficulty of modeling people's names.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www.xml.com/pub/a/2005/03/16/py-xml.html</id>
    <title>Python &amp; XML [column]: Writing and Reading XML with XIST</title>
    <link href="http://www.xml.com/pub/a/2005/03/16/py-xml.html"/>
    <link href="http://www.xml.com" rel="via" title="XML.com"/>
    <category term="XML"/>
    <category term="Python"/>
    <category term="XIST"/>
    <category term="tech"/><updated>2005-03-16T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">In Uche Ogbuji's latest Python and XML column he introduces XIST, which has been called "object-oriented XSLT for Python" -- a framework for manipulating XML Pythonically.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www.ibm.com/developerworks/xml/library/x-think30.html</id>
    <title>Thinking XML 30 [column]: State of the art in XML modeling</title>
    <link href="http://www.ibm.com/developerworks/xml/library/x-think30.html"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="XML"/>
    <category term="RELAX NG"/>
    <category term="modeling"/>
    <category term="tech"/><updated>2005-03-11T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">The running theme of the column has been semantic transparency: the ability to correctly interpret the contents of XML documents. Semantic transparency might be the most important aspect of XML modeling. This is first in a series of articles that review the many different approaches to semantic transparency and discuss what they mean to developers using XML.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www.xml.com/pub/a/2005/03/02/pyxml.html</id>
    <title>Python &amp; XML [column]: Gems from the Mines: 2002 to 2003</title>
    <link href="http://www.xml.com/pub/a/2005/03/02/pyxml.html"/>
    <link href="http://www.xml.com" rel="via" title="XML.com"/>
    <category term="XML"/>
    <category term="Python"/>
    <category term="PyXML"/>
    <category term="tech"/><updated>2005-03-02T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">Uche Ogbuji's Python and XML column returns with a recurring theme: mining the archives of the Python XML SIG list for lost and hidden gems.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www-106.ibm.com/developerworks/xml/library/x-think29.html</id>
    <title>Thinking XML 29 [column]: Querying WordNet as XML</title>
    <link href="http://www-106.ibm.com/developerworks/xml/library/x-think29.html"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="XML"/>
    <category term="WordNet"/>
    <category term="Python"/>
    <category term="tech"/><updated>2005-01-28T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml"/>
    </summary>
  </entry>

  <entry>
    <id>http://www.ibm.com/developerworks/xml/library/x-xapi.html</id>
    <title>Manage XML collections with XAPI</title>
    <link href="http://www.ibm.com/developerworks/web/library/wa-annotate/index.html"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="XML"/>
    <category term="tech"/>
    <updated>2005-01-11T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <subtitle type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">Use the Application Programming Interface for XML Databases with your favorite programming language
      </div>
    </subtitle>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">XML repositories are a simple extension of the idea of XML documents, and they call for a simple API for access and manipulation. The likes of DOM and XPath are too granular, while XQuery may be too elaborate for some needs. A group of XML repository implementers (named XML:DB) have come together to develop such an API specification, and the result is the Application Programming Interface for XML Databases (XAPI). In this article, Uche Ogbuji introduces XAPI.
      </div>
    </summary>
  </entry>

  <entry>
    <id>http://www.xml.com/pub/a/2005/01/19/amara.html</id>
    <title>Python &amp; XML [column]: Introducing the Amara XML Toolkit</title>
    <link href="http://www.xml.com/pub/a/2005/01/19/amara.html"/>
    <link href="http://www.xml.com" rel="via" title="XML.com"/>
    <category term="XML"/>
    <category term="Python"/>
    <category term="Amara"/>
    <category term="4Suite"/>
    <category term="tech"/><updated>2005-01-19T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">Uche Ogbuji introduces Amara, his new collection of XML tools for Python.
    </div>
    </summary>
  </entry>

  <entry>
    <id>http://www-106.ibm.com/developerworks/xml/library/x-think28.html</id>
    <title>Thinking XML 28 [column]: UBL 1.0 (plus ebXML Core Components and more)</title>
    <link href="http://www-106.ibm.com/developerworks/xml/library/x-think28.html"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="XML"/>
    <category term="UBL"/>
    <category term="ebXML"/>
    <category term="tech"/><updated>2004-12-09T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">Universal Business Language (UBL) is an XML business information interchange and transaction format that has made a few appearances in this column. UBL just reached a major milestone in its 1.0 release, which brings about a few more developments and some changes to the XML representation. In this installment, Uche Ogbuji looks at UBL 1.0, and introduces ebXML Core Components, which form the foundation of UBL's conceptual model.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www.xml.com/pub/a/2004/12/08/py-xml.html</id>
    <title>Python &amp; XML [column]: Full XML Indexes with Gnosis</title>
    <link href="http://www.xml.com/pub/a/2004/12/08/py-xml.html"/>
    <link href="http://www.xml.com" rel="via" title="XML.com"/>
    <category term="XML"/>
    <category term="Python"/>
    <category term="search"/>
    <category term="tech"/><updated>2004-12-08T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">In his latest Python and XML column, Uche Ogbuji shows us how to index XML documents using Python's Gnosis Utilities.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www.xml.com/pub/a/2004/11/24/py-xml.html</id>
    <title>Python &amp; XML [column]: Location, Location, Location</title>
    <link href="http://www.xml.com/pub/a/2004/11/24/py-xml.html"/>
    <link href="http://www.xml.com" rel="via" title="XML.com"/>
    <category term="XML"/>
    <category term="Python"/>
    <category term="SAX"/>
    <category term="DTD"/>
    <category term="Locator"/>
    <category term="DOM"/>
    <category term="tech"/><updated>2004-10-13T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">Uche Ogbuji describes some techniques for determing node or parse event locations, expressed in XPath or text location, when parsing XML with DOM or SAX.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www.xml.com/pub/a/2004/10/13/py-xml.html</id>
    <title>Python &amp; XML [column]: The State of Python-XML in 2004</title>
    <link href="http://www.xml.com/pub/a/2004/10/13/py-xml.html"/>
    <link href="http://www.xml.com" rel="via" title="XML.com"/>
    <category term="XML"/>
    <category term="Python"/>
    <category term="tech"/><updated>2004-10-13T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">Uche Ogbuji updates his report on the state of the Python-XML art, adding 24 new projects.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www.adtmag.com/article.asp?id=10196</id>
    <title>Perspective on XML: XML's growing pains</title>
    <link href="http://www.adtmag.com/article.asp?id=10196"/>
    <link href="http://adtmag.com" rel="via" title="Application Development Trends"/>
    <category term="XML"/>
    <category term="XSLT"/>
    <category term="XPath"/>
    <category term="XQuery"/>
    <category term="Namespaces"/>
    <category term="W3C XML Schema"/>
    <category term="WXS"/>
    <category term="RELAX NG"/>
    <category term="tech"/><updated>2004-11-01T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
Discussion of the appropriate level of scale for data models.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www.ibm.com/developerworks/xml/library/x-think27.html</id>
    <title>Thinking XML 27 [column]: XMLOpen and more XML Hacks</title>
    <link href="http://www.ibm.com/developerworks/xml/library/x-think27.html"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="XML"/>
    <category term="XMLOpen"/>
    <category term="XML Hacks"/>
    <category term="Metrics"/>
    <category term="URI"/>
    <category term="Semantic Web"/>
    <category term="Web Proper Names"/>
    <category term="pipelines"/>
    <category term="Data Type Library Language"/>
    <category term="DTLL"/>
    <category term="tech"/><updated>2004-10-29T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
Columnist Uche Ogbuji reflects on several noteworthy presentations at the recent XMLOpen conference in Cambridge, England, a rich technical symposium of XML processing topics. Noteworthy topics included XML metrics, Semantic Web, XML pipelines, Web Proper Names, and data types. He also makes one more practical observation on the book XML Hacks, a book of tips and tricks that he covered at length in his last column.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www-106.ibm.com/developerworks/xml/library/x-stron.html</id>
    <title>Discover the flexibility of Schematron abstract patterns</title>
    <link href="http://www-106.ibm.com/developerworks/xml/library/x-stron.html"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="XML"/>
    <category term="Schematron"/>
    <category term="schema"/>
    <category term="ISO"/>
    <category term="abstract patterns"/>
    <category term="variables"/>
    <category term="tech"/><updated>2004-10-08T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
If you have the basics of an XML format in mind, but know that you will not be able to get everyone at the table to agree to every detail of the schema, consider Schematron abstract patterns. Schematron is probably the most powerful XML schema language available (and it can be much more than just a schema language). Its advanced features, especially abstract patterns, allow for schemata that you can quickly adapt to multiple variants of XML formats. This opens up extraordinary possibilities for XML schema, including the abilities to restrict XML formats and to make them generic and adaptable as well.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www-106.ibm.com/developerworks/xml/library/x-think26.html</id>
    <title>Thinking XML 26 [column]: Hacking XML Hacks</title>
    <link href="http://www-106.ibm.com/developerworks/xml/library/x-think26.html"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="XML"/>
    <category term="XML Hacks"/>
    <category term="tech"/><updated>2004-09-14T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
XML Hacks is a book of tips and tricks for XML users. This useful resource covers a wide variety of topics, but in some cases further expansion and alternatives to material covered could be even more helpful. In this article, Uche Ogbuji offers practical observations based on topics from the book.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www.ibm.com/developerworks/xml/library/x-contain.html</id>
    <title>Principles of XML design: Considering container elements</title>
    <link href="http://www.ibm.com/developerworks/xml/library/x-contain.html"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="XML"/>
    <category term="container elements"/>
    <category term="design"/>
    <category term="wrapper elements"/>
    <category term="tech"/><updated>2004-09-24T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
A critical issue in designing XML formats is figuring out how to arrange elements and represent relationships between them. Element design works best when it naturally corresponds to how people think about the concepts that each element represents. This article discusses best practices for organizing information into XML elements, focusing on the use of container elements.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www-106.ibm.com/developerworks/xml/library/x-think25.html</id>
    <title>Thinking XML 25 [column]: Harold's Effective XML</title>
    <link href="http://www-106.ibm.com/developerworks/xml/library/x-think25.html"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="XML"/>
    <category term="Elliote Rusty Harold"/>
    <category term="Effective XML"/>
    <category term="design"/>
    <category term="tech"/><updated>2004-07-16T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
Noted XML expert Elliotte Rusty Harold's book Effective XML offers best practices for users of XML technologies. Much of the discussion in the book touches on issues of XML design that have also preoccupied Uche Ogbuji, and in this article he discusses the book as the thread for further observations on XML design and best practices. Share your thoughts on this article with the author and other readers in the accompanying discussion forum.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www.ibm.com/developerworks/edu/x-dw-xschematron-i.html</id>
    <title>Hands-on intro to Schematron [tutorial]</title>
    <link href="http://www.ibm.com/developerworks/edu/x-dw-xschematron-i.html"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="XML"/>
    <category term="Schematron"/>
    <category term="schema"/>
    <category term="ISO"/>
    <category term="Scimitar"/>
    <category term="tech"/><updated>2004-09-01T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
Meet Schematron, a schema language that allows you to directly express rules without creating a whole grammatical infrastructure. Schematron is useful whenever you wish to apply and check against rules for the contents of XML documents. Schematron is extraordinarily flexible in the variety of rules you can express, and it's even more expressive than other schema languages such as DTD, W3C XML Schema (WXS) and RELAX NG. In this tutorial, author Uche Ogbuji uses detailed examples to illustrate Schematron's use, and offers recipes for common schema needs.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www.adtmag.com/article.asp?id=10061</id>
    <title>Perspective on XML: Enterprise data goes high-fashion</title>
    <link href="http://www.adtmag.com/article.asp?id=10061"/>
    <link href="http://adtmag.com" rel="via" title="Application Development Trends"/>
    <category term="XML"/>
    <category term="UML"/>
    <category term="data model"/>
    <category term="outstanding!"/>
    <category term="tech"/><updated>2004-10-01T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
Discussion of the appropriate level of scale for data models.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www.adtmag.com/article.asp?id=9924</id>
    <title>Perspective on XML: Enterprise data goes high-fashion</title>
    <link href="http://www.adtmag.com/article.asp?id=9924"/>
    <link href="http://adtmag.com" rel="via" title="Application Development Trends"/>
    <category term="XML"/>
    <category term="UML"/>
    <category term="data model"/>
    <category term="tech"/><updated>2004-09-01T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
Discussion of the appropriate level of scale for data models.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www.xml.com/pub/a/2004/09/08/pyxml.html</id>
    <title>Python &amp; XML [column]: Wrestling HTML</title>
    <link href="http://www.xml.com/pub/a/2004/09/08/pyxml.html"/>
    <link href="http://www.xml.com" rel="via" title="XML.com"/>
    <category term="XML"/>
    <category term="Python"/>
    <category term="HTML"/>
    <category term="XHTML"/>
    <category term="uTidyLib"/>
    <category term="libxml2"/>
    <category term="tech"/><updated>2004-09-08T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
This article focuses on Python APIs for converting good or bad HTML to XML.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www-106.ibm.com/developerworks/xml/library/x-elemdes.html</id>
    <title>Principles of XML design: Element structures for names and addresses</title>
    <link href="http://www-106.ibm.com/developerworks/xml/library/x-elemdes.html"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="XML"/>
    <category term="elements"/>
    <category term="names"/>
    <category term="addresses"/>
    <category term="tech"/><updated>2004-08-06T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
Sharpen your understanding of elements, the most important structures in XML. Columnist Uche Ogbuji offers best practices for organizing info into elements.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www.xml.com/pub/a/2004/08/11/py-xml.html</id>
    <title>Python &amp; XML [column]: Practical SAX Notes</title>
    <link href="http://www.xml.com/pub/a/2004/08/11/py-xml.html"/>
    <link href="http://www.xml.com" rel="via" title="XML.com"/>
    <category term="XML"/>
    <category term="Python"/>
    <category term="XMLFilter"/>
    <category term="SAX"/>
    <category term="PyXML"/>
    <category term="tech"/><updated>2004-08-11T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
Uche Ogbuji follows up on some of the practical aspects and implications of his latest Python and XML columns, including SAX and namespace issues.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www.xml.com/pub/a/2004/07/28/py-xml.html</id>
    <title>Python &amp; XML [column]: Decomposition, Process, Recomposition</title>
    <link href="http://www.xml.com/pub/a/2004/07/28/py-xml.html"/>
    <link href="http://www.xml.com" rel="via" title="XML.com"/>
    <category term="XML"/>
    <category term="Python"/>
    <category term="SAX"/>
    <category term="generators"/>
    <category term="tech"/><updated>2004-07-28T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
In Uche Ogbuji's latest Python and XML column he explores a pattern for handling very large XML files easily and efficiently
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www.javareport.com/article.asp?id=9797</id>
    <title>Perspective on XML: XML circles the globe</title>
    <link href="http://www.javareport.com/article.asp?id=9797"/>
    <link href="http://adtmag.com" rel="via" title="Application Development Trends"/>
    <category term="XML"/>
    <category term="Unicode"/>
    <category term="i18n"/>
    <category term="l10n"/>
    <category term="tech"/><updated>2004-08-01T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
The importance of internationalization in XML
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www.adtmag.com/article.asp?id=9663</id>
    <title>Perspective on XML: Steady steps spell success with Google</title>
    <link href="http://www.adtmag.com/article.asp?id=9663"/>
    <link href="http://adtmag.com" rel="via" title="Application Development Trends"/>
    <category term="XML"/>
    <category term="Web"/>
    <category term="google"/>
    <category term="tech"/><updated>2004-07-01T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
Discussion of Google and development lessons from its success.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www.xml.com/pub/a/2004/06/30/py-xml.html</id>
    <title>Python &amp; XML [column]: XML Namespaces Support in Python Tools, Part 3</title>
    <link href="http://www.xml.com/pub/a/2004/06/30/py-xml.html"/>
    <link href="http://www.xml.com" rel="via" title="XML.com"/>
    <category term="XML"/>
    <category term="Python"/>
    <category term="namespaces"/>
    <category term="ElementTree"/>
    <category term="PyRXPU"/>
    <category term="libxml"/>
    <category term="tech"/><updated>2004-06-30T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
In this month's Python and XML column Uche Ogbuji examines the namespace support in ElementTree, PyRXPU, and libxml.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www.adtmag.com/article.asp?id=9090</id>
    <title>Commentary on "Objects. Encapsulation. XML?,"</title>
    <link href="http://www.adtmag.com/article.asp?id=9090"/>
    <link href="http://adtmag.com" rel="via" title="Application Development Trends"/>
    <category term="XML"/>
    <category term="RDF"/>
    <category term="Object oriented"/>
    <category term="database"/>
    <category term="C++"/>
    <category term="Java"/>
    <category term="Smalltalk"/>
    <category term="Python"/>
    <category term="tech"/><updated>2004-04-01T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
A letter taking issue with the article, and Ogbuji's response.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www-106.ibm.com/developerworks/xml/library/x-think24.html</id>
    <title>Thinking XML 24 [column]: Use the Atom format for syndicating news and more</title>
    <link href="http://www-106.ibm.com/developerworks/xml/library/x-think24.html"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="XML"/>
    <category term="Knowledge Management"/>
    <category term="Learning Objects"/>
    <category term="Atom"/>
    <category term="RSS"/>
    <category term="tech"/><updated>2004-05-25T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
The Web has always included sites that present series of articles, events, and other postings which are meant to be shared and cross-referenced. With large parts of the Web becoming conversational communities, many in these communities have come together to work on an XML-based standard for such interchange and cross-reference. Atom is the product of this effort -- a format and API for exchanging Web metadata. In this article, Uche Ogbuji introduces Atom.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www.ibm.com/developerworks/xml/library/x-tipdict.html</id>
    <title>Tip: Use data dictionary links for XML and Web services schemata</title>
    <link href="http://www.ibm.com/developerworks/xml/library/x-tipdict.html"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="XML"/>
    <category term="OWL"/>
    <category term="WSDL"/>
    <category term="data dictionary"/>
    <category term="tech"/><updated>2004-05-20T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
When designing XML and Web services schemata you will often (and ideally) reuse data elements defined in pre-existing standards. When you do, it is extremely useful to include links to such standards, providing precise data dictionary references. In so doing, you make processing and maintenance easier to automate. This tip illustrates this practice.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www-106.ibm.com/developerworks/xml/library/x-rddlns.html</id>
    <title>Tip: Use RDDL with your XML and Web services namespaces</title>
    <link href="http://www-106.ibm.com/developerworks/xml/library/x-rddlns.html"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="XML"/>
    <category term="RDDL"/>
    <category term="resource gloss"/>
    <category term="XLink"/>
    <category term="tech"/><updated>2004-05-14T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
The spaghetti of namespaces in, say, a WSDL file can lead to a lot of confusion. Resource Directory Description Language (RDDL) packages information on a namespace. If you use URLs for namespaces, use RDDL as described in this article to provide useful guides to users of your XML documents or Web services.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www.xml.com/pub/a/2004/05/12/py-xml.html</id>
    <title>Python &amp; XML [column]: XML Namespaces Support in Python Tools, Part 2</title>
    <link href="http://www.xml.com/pub/a/2004/05/12/py-xml.html"/>
    <link href="http://www.xml.com" rel="via" title="XML.com"/>
    <category term="XML"/>
    <category term="Python"/>
    <category term="namespaces"/>
    <category term="4Suite"/>
    <category term="XPath"/>
    <category term="XUpdate"/>
    <category term="tech"/><updated>2004-05-13T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
In his latest Python and XML column, Uche Ogbuji continues his tour of XML namespaces support in Python tools, focusing this time on 4Suite.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www-106.ibm.com/developerworks/webservices/library/ws-pyth17.html</id>
    <title>The Python Web services developer [column]: Python SOAP libraries, Part 5</title>
    <link href="http://www-106.ibm.com/developerworks/webservices/library/ws-pyth17.html"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="Python"/>
    <category term="XML"/>
    <category term="Web Services"/>
    <category term="SOAPy"/>
    <category term="SOAP"/>
    <category term="WSDL"/>
    <category term="tech"/><updated>2004-04-16T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <author>
      <name>Scott Archer</name>
      <email>scott.archer@glowingorb.com</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
As with its sister project ZSI, SOAPpy has enjoyed a recent increase in activity and is now in version 0.11.3. This version includes WSDL support and many other improvements. Uche Ogbuji and Scott Archer try out this new version with the same complex Web service they tried accessing with ZSI 1.4.1, running into a different set of difficulties.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www-106.ibm.com/developerworks/xml/library/x-tipcomp.html</id>
    <title>Tip: Compress XML files for efficient transmission</title>
    <link href="http://www-106.ibm.com/developerworks/xml/library/x-tipcomp.html"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="XML"/>
    <category term="binary"/>
    <category term="gzip"/>
    <category term="pkzip"/>
    <category term="bzip"/>
    <category term="tech"/><updated>2004-04-09T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
Binary XML has generated a lot of talk, and one of the motivators is the need for a less verbose transfer format, especially for use with Web services. One solution that is already at hand is data compression. This tip shows you how to use compression to prepare XML for transmission over Web services.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www-106.ibm.com/developerworks/xml/library/x-think23.html</id>
    <title>Thinking XML 23 [column]: Patent filings meet XML</title>
    <link href="http://www-106.ibm.com/developerworks/xml/library/x-think23.html"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="XML"/>
    <category term="Knowledge Management"/>
    <category term="Patent"/>
    <category term="USPTO"/>
    <category term="EPO"/>
    <category term="JPO"/>
    <category term="WIPO"/>
    <category term="E-PCT"/>
    <category term="Annex-F"/>
    <category term="PASAT"/>
    <category term="ePave"/>
    <category term="PatXML"/>
    <category term="tech"/><updated>2004-04-07T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
The major patent organizations all have the dual goal of making electronic patent filing easy and making such filings compatible from one office to another. XML is the leading technology behind these efforts and a great deal of thought and work has gone into XML formats for patent filing. In this column, Uche Ogbuji examines the background of XML patent e-filing and chats with patent expert Carl Oppedahl about the practicalities of XML filings.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www.ibm.com/developerworks/xml/library/x-tipdecl.html</id>
    <title>Tip: Always use an XML declaration</title>
    <link href="http://www.ibm.com/developerworks/xml/library/x-tipdecl.html"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="XML"/>
    <category term="version"/>
    <category term="standalone"/>
    <category term="encoding"/>
    <category term="tech"/><updated>2004-04-30T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
The XML declaration is optional in XML files, and defaults determine most of the information in the file. However, problems are common when these defaults do not match reality -- for example, the document could use an encoding other than one of the defaults. It's always safer to make the XML declaration. In this tip, Uche Ogbuji covers what should be included in the XML declaration on all files.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www.adtmag.com/article.asp?id=9160</id>
    <title>Managing XML libraries</title>
    <link href="http://www.adtmag.com/article.asp?id=9160"/>
    <link href="http://adtmag.com" rel="via" title="Application Development Trends"/>
    <category term="XML"/>
    <category term="RDF"/>
    <category term="OWL"/>
    <category term="tech"/><updated>2004-04-01T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
Discussion of Semantic Web technologies as simple library organization technologies for XML.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www.adtmag.com/article.asp?id=9012</id>
    <title>Keep your XML clean</title>
    <link href="http://www.adtmag.com/article.asp?id=9012"/>
    <link href="http://adtmag.com" rel="via" title="Application Development Trends"/>
    <category term="XML"/>
    <category term="RDF"/>
    <category term="design"/>
    <category term="tech"/><updated>2004-03-01T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
Discussion of XML design, emphasizing the importance of form as well as function.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www-106.ibm.com/developerworks/xml/library/x-think22.html</id>
    <title>Thinking XML 22 [column]: A glimpse into XML in the financial services industry</title>
    <link href="http://www-106.ibm.com/developerworks/xml/library/x-think22.html"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="XML"/>
    <category term="Knowledge Management"/>
    <category term="Financial services"/>
    <category term="FIXML"/>
    <category term="SWIFT"/>
    <category term="FpML"/>
    <category term="MDDL"/>
    <category term="XBRL"/>
    <category term="tech"/><updated>2004-02-20T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
A recent conference on XML in the financial services industry was an occasion for sober reflection of XML in the real world. Is XML finding its way into practical solutions? What best practices are guiding the adoption of XML? In this column, Uche Ogbuji ponders XML through the prism of the financial services industry, and presents some of the more important XML standards relevant to that industry.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www-106.ibm.com/developerworks/xml/library/x-namcar.html</id>
    <title>Principles of XML design: Use XML namespaces with care</title>
    <link href="http://www-106.ibm.com/developerworks/xml/library/x-namcar.html"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="XML"/>
    <category term="namespaces"/>
    <category term="local names"/>
    <category term="URI"/>
    <category term="tech"/><updated>2004-04-06T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
XML namespaces are an imperfect solution to a difficult problem. From basic information architecture to difficulties with APIs, namespaces can open up rather painful gotchas if used carelessly. In this article, Uche Ogbuji covers some of the more important design principles which, if followed, can minimize problems with namespaces.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www-106.ibm.com/developerworks/xml/library/x-eleatt.html</id>
    <title>Principles of XML design: When to use elements versus attributes</title>
    <link href="http://www-106.ibm.com/developerworks/xml/library/x-eleatt.html"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="XML"/>
    <category term="elements"/>
    <category term="attributes"/>
    <category term="design"/>
    <category term="tech"/><updated>2004-03-04T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
The oldest question asked by adopters of XML is when to use elements and when to use attributes in XML design. As with most design issues, this question rarely has absolute answers, but developers have also experienced a lack of very clear guidelines to help them make this decision. In this article, Uche Ogbuji offers a set of guiding principles for what to put in elements and what to put in attributes.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www.ibm.com/developerworks/xml/library/x-tipfire.html</id>
    <title>Tip: Use a proxy network library for SOAP behind a firewall</title>
    <link href="http://www.ibm.com/developerworks/xml/library/x-tipfire.html"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="XML"/>
    <category term="SOAP"/>
    <category term="proxy"/>
    <category term="connect.c"/>
    <category term="tech"/><updated>2004-03-26T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
If you are trying to access a SOAP service from behind a firewall and your SOAP library does not have support for proxying network connections, you may not be able to get through by direct request. In such cases you can use socket redirection programs to make the connection through a proxy server. This tip shows you how.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www-106.ibm.com/developerworks/xml/library/x-stand4/</id>
    <title>A survey of XML standards: Part 4--Detailed cross-reference of the most important XML standards</title>
    <link href="http://www-106.ibm.com/developerworks/xml/library/x-stand4/"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="XML Topic Maps"/>
    <category term="tech"/><updated>2004-03-02T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
The world of XML is vast and growing, with a huge variety of standards and technologies that interact in complex ways. It can be difficult for beginners to navigate the most important aspects of XML, and for users to keep track of new entries and changes in the space. XML is a basic syntax upon which you develop local and global vocabularies. Uche Ogbuji has presented the most important standards relating to XML in three in-depth articles. In this fourth article, he provides a detailed cross-reference of all the covered standards.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www-106.ibm.com/developerworks/xml/library/x-stand3.html</id>
    <title>A survey of XML standards: Part 3--The most important vocabularies</title>
    <link href="http://www-106.ibm.com/developerworks/xml/library/x-stand3.html"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="XHTML"/>
    <category term="Docbook"/>
    <category term="TEI"/>
    <category term="XSL-FO"/>
    <category term="SVG"/>
    <category term="VoiceXML"/>
    <category term="MathML"/>
    <category term="SMIL"/>
    <category term="RDF"/>
    <category term="XML Topic Maps"/>
    <category term=""/>
    <category term="tech"/><updated>2004-02-17T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
The world of XML is vast and growing, with a huge variety of standards and technologies that interact in complex ways. It can be difficult for beginners to navigate the most important aspects of XML, and for users to keep track of new entries and changes in the space. XML is a basic syntax upon which you develop local and global vocabularies. The key to its success is that several very important data formats are defined as XML vocabularies. In this article, Uche Ogbuji presents the most important of these.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www-106.ibm.com/developerworks/xml/library/x-tiplang.html</id>
    <title>Tip: Use language-specific tools for XML processing</title>
    <link href="http://www-106.ibm.com/developerworks/xml/library/x-tiplang.html"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="XML"/>
    <category term="SAX"/>
    <category term="DOM"/>
    <category term="Python"/>
    <category term="ECMAScript"/>
    <category term="Javascript"/>
    <category term="Python"/>
    <category term="Java"/>
    <category term="Perl"/>
    <category term="tech"/><updated>2004-01-30T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
DOM and SAX are the two best known systems for XML processing, but they are really compromises across programming languages. As such, they do not take advantage of any language's particular strengths. Often it is better to duck conventional wisdom and use special APIs that take advantage of particular strengths.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www-106.ibm.com/developerworks/xml/library/x-tipxinc.html</id>
    <title>Tip: Use XInclude to synchronize WSDL with source schemata</title>
    <link href="http://www-106.ibm.com/developerworks/xml/library/x-tipxinc.html"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="XML"/>
    <category term="XInclude"/>
    <category term="WSDL"/>
    <category term="schema"/>
    <category term="tech"/><updated>2004-01-22T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
In the document/literal style of Web services, the schemas of the interchange formats are often based on an existing document standard. This can cause problems synchronizing WSDL files with the standard schemata. This tip shows how to use XInclude to incorporate external schema fragments into a WSDL file.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www-106.ibm.com/developerworks/xml/library/x-tiphttp.html</id>
    <title>Tip: Use XML directly over HTTP for Web services (where appropriate)</title>
    <link href="http://www-106.ibm.com/developerworks/xml/library/x-tiphttp.html"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="XML"/>
    <category term="HTTP"/>
    <category term="Web services"/>
    <category term="SOAP"/>
    <category term="REST"/>
    <category term="tech"/><updated>2004-01-15T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
SOAP technologies usually exchange XML over HTTP, but SOAP has its pros and cons, and a lot of discussion has focused on how to use XML more directly to communicate between applications. This tip describes the direct approach, and discusses where it is most appropriate. It also discusses how to use WSDL to describe such services.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www.xml.com/pub/a/2003/03/10/python.html</id>
    <title>Python &amp; XML [column]: XML Namespaces Support in Python Tools, Part 1</title>
    <link href="http://www.xml.com/pub/a/2003/03/10/python.html"/>
    <link href="http://www.xml.com" rel="via" title="XML.com"/>
    <category term="XML"/>
    <category term="Python"/>
    <category term="namespaces"/>
    <category term="SAX"/>
    <category term="DOM"/>
    <category term="tech"/><updated>2004-03-10T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
Uche Ogbuji provides a hands-on introduction to Python's facilities for processing XML namespaces.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www.xml.com/pub/a/2004/02/11/py-xml.html</id>
    <title>Python &amp; XML [column]: Introducing PyRXP</title>
    <link href="http://www.xml.com/pub/a/2004/02/11/py-xml.html"/>
    <link href="http://www.xml.com" rel="via" title="XML.com"/>
    <category term="XML"/>
    <category term="Python"/>
    <category term="PyRXP"/>
    <category term="PyRXPU"/>
    <category term="conformance"/>
    <category term="Unicode"/>
    <category term="tech"/><updated>2004-02-11T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
In Uche Ogbuji's latest Python and XML column he examines PyRXP, discovering that it's not a conformant XML parser. He recommends the use of the PyRXPU variant instead.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www-106.ibm.com/developerworks/xml/library/x-stand2.html</id>
    <title>A survey of XML standards: Part 2, XML processing standards</title>
    <link href="http://www-106.ibm.com/developerworks/xml/library/x-stand2.html"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="XSLT"/>
    <category term="SAX"/>
    <category term="DOM"/>
    <category term="XAPI"/>
    <category term="XUpdate"/>
    <category term="XQuery"/>
    <category term="SQL/XML"/>
    <category term="CSS"/>
    <category term="XForms"/>
    <category term="SOAP"/>
    <category term="WSDL"/>
    <category term="tech"/><updated>2004-02-03T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
    The world of XML is vast and growing, with a huge variety of standards and technologies that interact in complex ways. It can be difficult for beginners to navigate the most important aspects of XML, and for users to keep track of new entries and changes in the space. Uche Ogbuji continues this series on XML standards by focusing on XML processing technologies.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www-106.ibm.com/developerworks/xml/library/x-stand1.html</id>
    <title>A survey of XML standards: Part 1: The core standards -- a foundation for the wide world of XML</title>
    <link href="http://www-106.ibm.com/developerworks/xml/library/x-stand1.html"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="XML"/>
    <category term="Catalog"/>
    <category term="XPath"/>
    <category term="Namespaces"/>
    <category term="W3C XML Schema"/>
    <category term="WXS"/>
    <category term="XPointer"/>
    <category term="XInclude"/>
    <category term="Unicode"/>
    <category term="XLink"/>
    <category term="RELAX NG"/>
    <category term="DTD"/>
    <category term="Schematron"/>
    <category term="RDDL"/>
    <category term="tech"/><updated>2003-12-20T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
The world of XML is vast and growing, with a huge variety of standards and technologies that interact in complex ways. It can be difficult for beginners to navigate the most important aspects of XML, and for users to keep track of new entries and changes in the space. In this series of articles, Uche Ogbuji provides a guide to XML standards, including a wide range of recommended resources for further information.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www-106.ibm.com/developerworks/webservices/library/ws-pyth16/</id>
    <title>The Python Web services developer [column]: The real world, Part 2</title>
    <link href="http://www-106.ibm.com/developerworks/webservices/library/ws-pyth16/"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="Python"/>
    <category term="XML"/>
    <category term="Web Services"/>
    <category term="Amazon"/>
    <category term="SOAP"/>
    <category term="wxPython"/>
    <category term="tech"/><updated>2004-01-21T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <author>
      <name>Scott Archer</name>
      <email>scott.archer@glowingorb.com</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
This column has covered the major Python APIs available for Web services processing, demonstrating basic facilities and approaches through the use of simple clients and servers. All of this has laid the groundwork for utilizing real-world Web services. Part 1 of "The Real World", showed how to search the Web using Google's Web service API. Part 2 now takes that a step further and applis those tools and understanding to a more complex real-world Web service application. This issue will focus on the Web APIs for Amazon.com -- to which the authors will show you how to connect over SOAP so that you can programmatically search the huge catalogs of Amazon.com. As a bonus, the authors show you how to wrap the Web services code in a GUI.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www.xml.com/pub/a/2004/01/14/py-xml.html</id>
    <title>Python &amp; XML [column]: Building Dictionaries With SAX</title>
    <link href="http://www.xml.com/pub/a/2004/01/14/py-xml.html"/>
    <link href="http://www.xml.com" rel="via" title="XML.com"/>
    <category term="XML"/>
    <category term="Python"/>
    <category term="SAX"/>
    <category term="dictionary"/>
    <category term="tech"/><updated>2004-01-14T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
In Uche Ogbuji's latest Python and XML column he describes an optimization technique for speeding up Python XML applications by using SAX to build specialized Python dictionaries.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www-106.ibm.com/developerworks/webservices/library/ws-pyth15.html</id>
    <title>The Python Web services developer [column]: Python SOAP libraries, Part 4</title>
    <link href="http://www-106.ibm.com/developerworks/webservices/library/ws-pyth15.html"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="Python"/>
    <category term="XML"/>
    <category term="Web Services"/>
    <category term="ZSI"/>
    <category term="SOAP"/>
    <category term="WSDL"/>
    <category term="tech"/><updated>2003-12-30T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <author>
      <name>Scott Archer</name>
      <email>scott.archer@glowingorb.com</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
The last time ZSI was covered in this column, it was version 1.2. ZSI has enjoyed a recent spate of activity including the contributions for other developers besides the lead Rich Salz. It is now in version 1.4.1 and has added some WSDL support. Uche Ogbuji and Scott Archer take a look at these new developments and also discover a third-party wrapper option for ZSI.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www.adtmag.com/article.asp?id=8596</id>
    <title>Objects. Encapsulation. XML?</title>
    <link href="http://www.adtmag.com/article.asp?id=8596"/>
    <link href="http://adtmag.com" rel="via" title="Application Development Trends"/>
    <category term="XML"/>
    <category term="Object oriented"/>
    <category term="database"/>
    <category term="tech"/><updated>2003-12-01T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
Discussion of how XML fits into the scheme of Object Orientation.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www.xml.com/pub/a/2003/12/17/py-xml.html</id>
    <title>Python &amp; XML [column]: xmltramp and pxdom</title>
    <link href="http://www.xml.com/pub/a/2003/12/17/py-xml.html"/>
    <link href="http://www.xml.com" rel="via" title="XML.com"/>
    <category term="XML"/>
    <category term="Python"/>
    <category term="xmtramp"/>
    <category term="pxdom"/>
    <category term="tech"/><updated>2003-12-17T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
Uche Ogbuji examines two different means of parsing XML documents in Python: xmltramp and pxdom.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www-106.ibm.com/developerworks/xml/library/x-think21.html</id>
    <title>Thinking XML 21 [column]: Learning Objects Metadata</title>
    <link href="http://www-106.ibm.com/developerworks/xml/library/x-think21.html"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="XML"/>
    <category term="Knowledge Management"/>
    <category term="Learning Objects"/>
    <category term="LOM"/>
    <category term="RDF"/>
    <category term="tech"/><updated>2003-12-02T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
The education technology field is leading the way with some very interesting uses of XML metadata in practice. A wide range of specifications, standards, and developments exist in the area, but at the center of things is the IEEE Learning Objects Metadata (LOM) specification. In this article, Uche Ogbuji introduces LOM and shows how it can be of interest even to those who have no direct connections with education techology.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www.xml.com/pub/a/2003/11/12/py-xml.html</id>
    <title>Python &amp; XML [column]: More Gems From the Mines</title>
    <link href="http://www.xml.com/pub/a/2003/11/12/py-xml.html"/>
    <link href="http://www.xml.com" rel="via" title="XML.com"/>
    <category term="XML"/>
    <category term="Python"/>
    <category term="XL-SIG"/>
    <category term="DOM"/>
    <category term="tech"/><updated>2003-11-12T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
Uche Ogbuji presents new gems from the archives of the main Python-XML mailing list, again focusing on XML output.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www.xml.com/pub/a/2003/10/15/py-xml.html</id>
    <title>Python &amp; XML [column]: Three More For XML Output</title>
    <link href="http://www.xml.com/pub/a/2003/10/15/py-xml.html"/>
    <link href="http://www.xml.com" rel="via" title="XML.com"/>
    <category term="XML"/>
    <category term="Python"/>
    <category term="4Suite"/>
    <category term="XSLT"/>
    <category term="JAXML"/>
    <category term="xmlprint"/>
    <category term="output"/>
    <category term="tech"/><updated>2003-10-15T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
Uche Ogbuji presents three tools for creating XML in Python: 4XSLT's output handlers, xmlprint and JAXML.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www-106.ibm.com/developerworks/webservices/library/ws-pyth14/</id>
    <title>The Python Web services developer [column]: The real world, Part 1</title>
    <link href="http://www-106.ibm.com/developerworks/webservices/library/ws-pyth14/"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="Python"/>
    <category term="XML"/>
    <category term="Google"/>
    <category term="SOAP"/>
    <category term="Web Services"/>
    <category term="tech"/><updated>2003-10-14T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <author>
      <name>Scott Archer</name>
      <email>scott.archer@glowingorb.com</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
This column has covered the major Python APIs available for Web services processing, demonstrating basic facilities and approaches through the use of simple clients and servers. All of this has laid the groundwork for utilizing 'real-world' Web services. The authors will now apply their tools and understanding to several real-world Web services applications. Their focus here is on the Google Web APIs -- to which they will connect over SOAP so that they can programmatically search the Web and fetch cached Web pages.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www-106.ibm.com/developerworks/xml/library/x-think20.html</id>
    <title>Thinking XML 20 [column]: Semantic anchors for XML</title>
    <link href="http://www-106.ibm.com/developerworks/xml/library/x-think20.html"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="XML"/>
    <category term="Knowledge Management"/>
    <category term="Topic Maps"/>
    <category term="UDEF"/>
    <category term="tech"/><updated>2003-10-07T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
XML syntax is just the foundation for data interoperability. The next step is semantic transparency. Some groups are working to address this by defining entire document formats to be adopted wholesale, while other groups are working on ways to express common terminology and concepts at a more granular level. In this installment, Uche Ogbuji looks at XML Topic Maps Published Subjects and Universal Data Element Framework (UDEF), two ideas that take the granular approach by seeking to provide anchors in the semantic stream.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www.adtmag.com/article.asp?id=8273</id>
    <title>What's in the name "Web service"?</title>
    <link href="http://www.adtmag.com/article.asp?id=8273"/>
    <link href="http://adtmag.com" rel="via" title="Application Development Trends"/>
    <category term="XML"/>
    <category term="Web services"/>
    <category term="tech"/><updated>2003-10-01T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
A discussion of the name game surrounding the buzzword "Web services".
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www.xml.com/pub/a/2003/09/10/py.html</id>
    <title>Python &amp; XML [column]: The State of the Python-XML Art, 2003</title>
    <link href="http://www.xml.com/pub/a/2003/09/10/py.html"/>
    <link href="http://www.xml.com" rel="via" title="XML.com"/>
    <category term="XML"/>
    <category term="Python"/>
    <category term="tech"/><updated>2003-09-10T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
In this month's Python and XML column Uche Ogbuji updates his report on the state of the Python-XML art, adding 24 new projects.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www-106.ibm.com/developerworks/webservices/library/ws-pyth13/</id>
    <title>The Python Web services developer [column]: The power of three: Python, Web services, and XSLT</title>
    <link href="http://www-106.ibm.com/developerworks/webservices/library/ws-pyth13/"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="Python"/>
    <category term="XML"/>
    <category term="XSLT"/>
    <category term="Kafka"/>
    <category term="Web Services"/>
    <category term="tech"/><updated>2003-06-24T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <author>
      <name>Mike Olson</name>
      <email>mike.olson@fourthought.com</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
This column has covered the major Python APIs for Web services processing. These cover a decent amount of ground, although the enthusiasm for Web services development has been notably muted in the Python community compared to that of, say, the Java community. One way to augment the Python features for Web services processing is to take advantage of the most popular specialized language for XML processing: XSLT. Web services involve XML in description and on the wire. Inevitably there has been some work on XSLT processing of Web services formats. IBM developerWorks hosted some pioneering work in the area with Uche Ogbuji's article, "WSDL processing with XSLT" (see Resources), and there has been a lot of other development since then. Python offers several good tools for XSLT processing (see Resources), and you can tap into this mine to enhance Web services processing capabilities. This article will show you how. You should be familiar with XSLT in order to follow the examples. You can use 4XSLT and the 4XSLT API for the examples.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www.xml.com/pub/a/2003/08/13/py-xml.html</id>
    <title>Python &amp; XML [column]: Introducing Anobind</title>
    <link href="http://www.xml.com/pub/a/2003/08/13/py-xml.html"/>
    <link href="http://www.xml.com" rel="via" title="XML.com"/>
    <category term="XML"/>
    <category term="Python"/>
    <category term="4Suite"/>
    <category term="Anobind"/>
    <category term="tech"/><updated>2003-08-13T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
In his latest Python and XML column Uche Ogbuji introduces anobind, a Python-XML data binding library which is driven by declarative rules.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www.adtmag.com/article.asp?id=8004</id>
    <title>What is this 'agility'?</title>
    <link href="http://www.adtmag.com/article.asp?id=8004"/>
    <link href="http://adtmag.com" rel="via" title="Application Development Trends"/>
    <category term="XML"/>
    <category term="agile"/>
    <category term="python"/>
    <category term="Extreme Programming"/>
    <category term="tech"/><updated>2003-08-01T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
A discussion of 'agile' technologies.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www-106.ibm.com/developerworks/xml/library/x-think19.html </id>
    <title>Thinking XML 19 [column]: XML Topic Maps by the book</title>
    <link href="http://www-106.ibm.com/developerworks/xml/library/x-think19.html "/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="XML"/>
    <category term="Knowledge Management"/>
    <category term="Topic Maps"/>
    <category term="tech"/><updated>2003-07-30T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
Topic Maps provide a system for organizing information, and XML Topic Maps bring this system to the world of XML. In this article, Uche Ogbuji examines XML Topic Maps, introducing the technology in the course of reviewing a key book on the
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www.xml.com/pub/a/2003/07/02/py-xml.html</id>
    <title>Python &amp; XML [column]: XML Data Bindings in Python, part 2</title>
    <link href="http://www.xml.com/pub/a/2003/07/02/py-xml.html"/>
    <link href="http://www.xml.com" rel="via" title="XML.com"/>
    <category term="XML"/>
    <category term="Python"/>
    <category term="gnosis"/>
    <category term="objectify"/>
    <category term="data bindings"/>
    <category term="tech"/><updated>2003-07-02T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
In the second part of Uche Ogbuji's series on XML data binding tools in Python, he examines the XML data binding library which is part of David Mertz's Gnosis Utils.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www.adtmag.com/article.asp?id=7744</id>
    <title>A custom-fit career in app development</title>
    <link href="http://www.adtmag.com/article.asp?id=7744"/>
    <link href="http://adtmag.com" rel="via" title="Application Development Trends"/>
    <category term="XML"/>
    <category term="XQuery"/>
    <category term="XPath"/>
    <category term="tech"/><updated>2003-06-01T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
Encouragment for developers to break out of recruiters' neat boxes and build a more fitting career.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www.xml.com/pub/a/2003/06/11/py-xml.html</id>
    <title>Python &amp; XML [column]: XML Data Bindings in Python</title>
    <link href="http://www.xml.com/pub/a/2003/06/11/py-xml.html"/>
    <link href="http://www.xml.com" rel="via" title="XML.com"/>
    <category term="XML"/>
    <category term="Python"/>
    <category term="generateDS.py"/>
    <category term="data bindings"/>
    <category term="tech"/><updated>2003-06-11T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
Uche Ogbuji commences a
review of the various XML data-binding technologies available
for Python.  Uche starts with a tool called generateDS.py.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www-106.ibm.com/developerworks/xml/library/x-xmptron/</id>
    <title>Introducing Examplotron</title>
    <link href="http://www-106.ibm.com/developerworks/xml/library/x-xmptron/"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="Examplotron"/>
    <category term="RELAX NG"/>
    <category term="schema"/>
    <category term="XSLT"/>
    <category term="4Suite"/>
    <category term="tech"/><updated>2003-06-09T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
    A zoo of XML schema languages is out there, and although some of the beasts are bigger than others none is as friendly as Examplotron. With Examplotron, your example XML document is your schema, for the most part. It requires you to learn very little new syntax, and most of the core features of XML can be specified by providing representative examples in the source. In this article, Uche Ogbuji introduces Examplotron, providing plenty of, well, examples.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www-106.ibm.com/developerworks/java/library/j-jython.html</id>
    <title>Charming Jython</title>
    <link href="http://www-106.ibm.com/developerworks/java/library/j-jython.html"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="Python"/>
    <category term="Jython"/>
    <category term="Java"/>
    <category term="tech"/><updated>2003-05-06T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
Jython, the 100% Pure Java implementation of the Python programming language, combines the advantages of Python and the Java virtual machine and library and serves as a handy complement to the Java platform. In this article, software consultant and frequent developerWorks contributor Uche Ogbuji introduces Jython 2.1 to Java developers by contrasting and comparing the way Python and the Java language create classes and how they use the interpreter. Uche illustrates the differences by providing samples of Java library access, as well as the Jython interpreter shell and code files.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www-106.ibm.com/developerworks/xml/library/x-think18/index.html</id>
    <title>Thinking XML 18 [column]: The commons of creativity</title>
    <link href="http://www-106.ibm.com/developerworks/xml/library/x-think18/index.html"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="XML"/>
    <category term="Knowledge Management"/>
    <category term="RDF"/>
    <category term="creative commons"/>
    <category term="licenses"/>
    <category term="policy"/>
    <category term="tech"/><updated>2003-05-01T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
Many artists independent of big media concerns seek to collaborate with others and make their work more widely available. They are often willing to offer less restrictive contractual terms than those that consumers have recently been forced to accept. Creative Commons, which Uche Ogbuji introduces in this article, seeks to address this need by providing a way to express copyright license terms that are both human-readable and machine-readable. The machine-readable form uses RDF and thus makes available the network effects that have been covered throughout this column.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www.xml.com/pub/a/2003/05/14/py-xml.html</id>
    <title>Python &amp; XML [column]: Using libxml in Python</title>
    <link href="http://www.xml.com/pub/a/2003/05/14/py-xml.html"/>
    <link href="http://www.xml.com" rel="via" title="XML.com"/>
    <category term="XML"/>
    <category term="Python"/>
    <category term="libxml"/>
    <category term="XmlTextReader"/>
    <category term="tech"/><updated>2003-05-14T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
Covers the Python bindings to the fast and many-featured libxml
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www.xml.com/pub/a/2003/03/12/py-xml.html</id>
    <title>Python &amp; XML [column]: Using SAX for Proper XML Output</title>
    <link href="http://www.xml.com/pub/a/2003/03/12/py-xml.html"/>
    <link href="http://www.xml.com" rel="via" title="XML.com"/>
    <category term="XML"/>
    <category term="Python"/>
    <category term="output"/>
    <category term="SAX"/>
    <category term="tech"/><updated>2003-03-12T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
How to use SAX to generate proper XML output from Python programs.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www.adtmag.com/article.asp?id=7620</id>
    <title>Is XQuery an omni-tool?</title>
    <link href="http://www.adtmag.com/article.asp?id=7620"/>
    <link href="http://adtmag.com" rel="via" title="Application Development Trends"/>
    <category term="XML"/>
    <category term="XQuery"/>
    <category term="XPath"/>
    <category term="tech"/><updated>2003-05-01T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
An argument that XQuery does too much, and standardizes too early.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www.xml.com/pub/a/2003/04/09/py-xml.html</id>
    <title>Python &amp; XML [column]: Gems From the [Python/XML] Archives</title>
    <link href="http://www.xml.com/pub/a/2003/04/09/py-xml.html"/>
    <link href="http://www.xml.com" rel="via" title="XML.com"/>
    <category term="XML"/>
    <category term="Python"/>
    <category term="output"/>
    <category term="wxPython"/>
    <category term="Tree Widget"/>
    <category term="tech"/><updated>2003-04-09T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
In this and in subsequent articles I will mine the richness of the 
XML-SIG mailing list for some of its choicest bits of code. I start in 
this article with a couple of very handy snippets from 1998 and 1999. 
Where necessary, I have updated code to use current APIs, style, and 
conventions in order to make it immediately useful to readers.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www-106.ibm.com/developerworks/xml/library/x-think17/index.html</id>
    <title>Thinking XML 17 [column]: Introducing N-Triples</title>
    <link href="http://www-106.ibm.com/developerworks/xml/library/x-think17/index.html"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="XML"/>
    <category term="Knowledge Management"/>
    <category term="RDF"/>
    <category term="N-Triples"/>
    <category term="tech"/><updated>2003-04-01T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
RDF/XML isn't the only representation of an RDF model. The W3C developed N-Triples, a format for an RDF representation that is especially suited for test suites. Here, Uche Ogbuji introduces N-Triples using examples converted from RDF/XML.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www-106.ibm.com/developerworks/xml/library/x-tipvocab.html</id>
    <title>Tip: Use internal references in XML vocabularies</title>
    <link href="http://www-106.ibm.com/developerworks/xml/library/x-tipvocab.html"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="XML"/>
    <category term="XPath"/>
    <category term="DTD"/>
    <category term="ID"/>
    <category term="tech"/><updated>2003-03-01T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
In some cases, you can avoid repeating identical data fields by using internal references from one field to another. Uche Ogbuji demonstrates how in this tip.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www-106.ibm.com/developerworks/xml/library/x-tipsaxflex.html</id>
    <title>Tip: SAX filters for flexible processing</title>
    <link href="http://www-106.ibm.com/developerworks/xml/library/x-tipsaxflex.html"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="Python"/>
    <category term="XML"/>
    <category term="SAX"/>
    <category term="filters"/>
    <category term="tech"/><updated>2003-03-01T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
SAX filters allow you to construct complex XML processing behaviors from simple, independent modules. In this tip, Uche Ogbuji introduces this important XML processing technique.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www-106.ibm.com/developerworks/webservices/library/ws-pythcol.html</id>
    <title>The Python Web services developer [column]: SOAP requests using SMTP</title>
    <link href="http://www-106.ibm.com/developerworks/webservices/library/ws-pythcol.html"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="Python"/>
    <category term="SMTP"/>
    <category term="e-mail"/>
    <category term="Web Services"/>
    <category term="tech"/><updated>2003-01-01T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <author>
      <name>Mike Olson</name>
      <email>mike.olson@fourthought.com</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
When most people think of SOAP, they think of sending XML requests, and getting XML responses over the HTTP protocol. This does not always have to be the case. In fact, the SOAP protocol defines HTTP as one possible transport for SOAP messages. In this article Mike Olson and Uche Ogbuji explore sending and receiving SOAP requests over the Simple Mail Transfer Protocol (SMTP).
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www-106.ibm.com/developerworks/xml/library/x-tiprdfai.html</id>
    <title>Tip: Use rdf:about and rdf:ID effectively in RDF/XML.</title>
    <link href="http://www-106.ibm.com/developerworks/xml/library/x-tiprdfai.html"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="RDF"/>
    <category term="XML"/>
    <category term="rdf:about"/>
    <category term="rdf:ID"/>
    <category term="tech"/><updated>2003-03-01T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
The combination of RDF and XML allows for several different approaches to specifying resources, and sometimes the rules for interpreting the syntax can be troublesome. In this tip, Uche Ogbuji uses examples to illustrate the various behaviors of the rdf:ID and rdf:about attributes, and shows how to use XML Base to control these behaviors.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www-106.ibm.com/developerworks/xml/library/x-think16.html</id>
    <title>Thinking XML 16 [column]: Universal Business Language (UBL)</title>
    <link href="http://www-106.ibm.com/developerworks/xml/library/x-think16.html"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="XML"/>
    <category term="Knowledge Management"/>
    <category term="Universal Business Language (UBL)"/>
    <category term="OASIS"/>
    <category term="tech"/><updated>2003-03-01T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
Universal Business Language (UBL) is an ambitious effort to unify the chaotic world of XML formats for business. Recently, the group behind UBL released the first work products for public review. In this article Uche Ogbuji takes a first in-depth look at UBL.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www.xml.com/pub/a/2003/02/12/py-xml.html</id>
    <title>Python &amp; XML [column]: Simple XML Processing With elementtree</title>
    <link href="http://www.xml.com/pub/a/2003/02/12/py-xml.html"/>
    <link href="http://www.xml.com" rel="via" title="XML.com"/>
    <category term="XML"/>
    <category term="Python"/>
    <category term="DOM"/>
    <category term="elementtree"/>
    <category term="tech"/><updated>2003-02-12T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
Exploring Fredrik Lundh's spare, fast and pythonic XML processing library.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www-106.ibm.com/developerworks/library/x-exslt.html</id>
    <title>EXSLT by example</title>
    <link href="http://www-106.ibm.com/developerworks/library/x-exslt.html"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="XSLT"/>
    <category term="EXSLT"/>
    <category term="dates and times"/>
    <category term="evaluate"/>
    <category term="tech"/><updated>2003-02-01T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
EXSLT is an important community standard for XSLT. Author/consultant Uche Ogbuji introduces and demonstrates this initiative for standard extension functions and elements.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www-106.ibm.com/developerworks/xml/library/x-tipcurrent.html</id>
    <title>Tip:  Keep context straight in XSLT</title>
    <link href="http://www-106.ibm.com/developerworks/xml/library/x-tipcurrent.html"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="XML"/>
    <category term="XSLT"/>
    <category term="current"/>
    <category term="context"/>
    <category term="tech"/><updated>2003-02-01T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
Developers frequently forget where context changes in XPath. XSLT provides an anchor for the initial context used for XPath expressions -- the current() function. In this tip, Uche Ogbuji warns about common bugs associated with changing context, and explains how to use current(). To follow this tip, you should be familiar with the basics of XPath and XSLT.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www.adtmag.com/article.asp?id=7238</id>
    <title>The worry about program wizards</title>
    <link href="http://www.adtmag.com/article.asp?id=7238"/>
    <link href="http://adtmag.com" rel="via" title="Application Development Trends"/>
    <category term="XML"/>
    <category term="Web services"/>
    <category term="Wizards"/>
    <category term="tech"/><updated>2003-02-05T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
A warning against efforts to conjure systems for XML and Web services programming wizards
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www-106.ibm.com/developerworks/xml/library/x-think15/</id>
    <title>Thinking XML 15 [column]: The open office file format</title>
    <link href="http://www-106.ibm.com/developerworks/xml/library/x-think15/"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="XML"/>
    <category term="Knowledge Management"/>
    <category term="Openoffice"/>
    <category term="OASIS"/>
    <category term="tech"/><updated>2003-01-01T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
OpenOffice.org is a mature, open source, front office applications suite with the advantage of a saved file format based on an open XML DTD. This gives users and developers an extraordinary amount of flexibility and power in dealing with work produced in OpenOffice.org. In this article, Uche Ogbuji introduces the OpenOffice file format and explains its advantages.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www.xml.com/pub/a/2003/01/08/py-xml.html</id>
    <title>Python &amp; XML [column]: Python Generators + DOM</title>
    <link href="http://www.xml.com/pub/a/2003/01/08/py-xml.html"/>
    <link href="http://www.xml.com" rel="via" title="XML.com"/>
    <category term="XML"/>
    <category term="Python"/>
    <category term="DOM"/>
    <category term="generators"/>
    <category term="python"/>
    <category term="XPath"/>
    <category term="tech"/><updated>2003-01-08T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
Techniques and routines taking advantage of Python generators for DOM
processing.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www-106.ibm.com/developerworks/xml/edu/x-dw-x4suite5-i.html</id>
    <title>Develop Python/XML with 4Suite, Part 5: The Repository Features [tutorial]</title>
    <link href="http://www-106.ibm.com/developerworks/xml/edu/x-dw-x4suite5-i.html"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="4Suite"/>
    <category term="Python"/>
    <category term="Repository"/>
    <category term="Server"/>
    <category term="XML"/>
    <category term="RDF"/>
    <category term="XSA"/>
    <category term="tech"/><updated>2003-01-01T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <author>
      <name/>
      <email>chimezie.ogbuji@fourthought.com</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
This tutorial, the fifth in a series, shows Python developers how to
use the popular open-source 4Suite toolkit for XML processing to
create a Web repository application. The authors, 4Suite's creators
Uche and Chimezie Ogbuji, walk you through the process of creating a
Web application that allows users to manage a database of software
descriptions and related vendors using a standard XML format.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www.xml.com/pub/a/2002/12/11/py-xml.html</id>
    <title>Python &amp; XML [column]: A Python &amp; XML Companion</title>
    <link href="http://www.xml.com/pub/a/2002/12/11/py-xml.html"/>
    <link href="http://www.xml.com" rel="via" title="XML.com"/>
    <category term="XML"/>
    <category term="Python"/>
    <category term="4Suite"/>
    <category term="book"/>
    <category term="4DOM"/>
    <category term="XSLT"/>
    <category term="XPath"/>
    <category term="minidom"/>
    <category term="tech"/><updated>2002-12-11T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
Updates and notes on the book _Python &amp; XML_, by Fred Jones and Christopher Drake.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www-106.ibm.com/developerworks/xml/library/x-think14.html</id>
    <title>Thinking XML 14 [column]: Manage music metadata with MusicBrainz</title>
    <link href="http://www-106.ibm.com/developerworks/xml/library/x-think14.html"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="RDF"/>
    <category term="Knowledge Management"/>
    <category term="MusicBrainz"/>
    <category term="cddb"/>
    <category term="mp3"/>
    <category term="tech"/><updated>2002-11-01T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
Tune in to MusicBrainz, a project for managing digital media metadata that uses RDF in its core data formats.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www.adtmag.com/article.asp?id=6965</id>
    <title>XML class warfare</title>
    <link href="http://www.adtmag.com/article.asp?id=6965"/>
    <link href="http://adtmag.com" rel="via" title="Application Development Trends"/>
    <category term="XML"/>
    <category term="XPath"/>
    <category term="XML Schema"/>
    <category term="tech"/>
    <category term="outstanding!"/>
    <updated>2002-12-04T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
Of the conflict between those who prefer to see XML primarily in textual terms and those who prefer to make heavy use of data typing.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www-106.ibm.com/developerworks/xml/library/x-debugxs.html</id>
    <title>Debug XSLT on the fly</title>
    <link href="http://www-106.ibm.com/developerworks/xml/library/x-debugxs.html"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="XSLT"/>
    <category term="EXSLT"/>
    <category term="xsl:message"/>
    <category term="debugging"/>
    <category term="tech"/><updated>2002-11-01T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
Debuggers are very handy in programming, but they can also be complex pieces of software in their own right -- complex to set up, to learn, and to use. Sometimes you just need a quick print-out of some values that you suspect to be at the heart of a specific problem you're seeing. In this article, Uche Ogbuji shows how to do quick debugging using xsl:message and other built-in facilities of XSLT, as well as common extensions in EXSLT.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www-106.ibm.com/developerworks/webservices/library/ws-pyth11.html</id>
    <title>The Python Web services developer [column]: RSS for Python</title>
    <link href="http://www-106.ibm.com/developerworks/webservices/library/ws-pyth11.html"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="Python"/>
    <category term="RSS"/>
    <category term="RDF"/>
    <category term="Web Services"/>
    <category term="tech"/><updated>2002-11-01T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <author>
      <name>Mike Olson</name>
      <email>mike.olson@fourthought.com</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
RSS is one of the most successful XML services ever. Despite its chaotic roots, it has become the community standard for exchanging content information across Web sites. Python is an excellent tool for RSS processing, and Mike Olson and Uche Ogbuji introduce a couple of modules available for this purpose.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www.xml.com/pub/a/2002/11/13/py-xml.html</id>
    <title>Python &amp; XML [column]: Proper XML Output in Python</title>
    <link href="http://www.xml.com/pub/a/2002/11/13/py-xml.html"/>
    <link href="http://www.xml.com" rel="via" title="XML.com"/>
    <category term="XML"/>
    <category term="Python"/>
    <category term="4Suite"/>
    <category term="unicode"/>
    <category term="parsing"/>
    <category term="tech"/><updated>2002-11-13T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
In this article, I methodically thrash out the issues with producing XML output from Python programs.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www.xml.com/pub/a/2002/10/16/py-xml.html</id>
    <title>Python &amp; XML [column]: A Tour of 4Suite</title>
    <link href="http://www.xml.com/pub/a/2002/10/16/py-xml.html"/>
    <link href="http://www.xml.com" rel="via" title="XML.com"/>
    <category term="XML"/>
    <category term="Python"/>
    <category term="4Suite"/>
    <category term="DOM"/>
    <category term="parsing"/>
    <category term="RELAX NG"/>
    <category term="XPath"/>
    <category term="XPattern"/>
    <category term="tech"/><updated>2002-10-16T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
In this article, I provide a tour of the 4Suite package, with liberal
code examples.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www-106.ibm.com/developerworks/xml/library/x-think13.html</id>
    <title>Thinking XML 13 [column]: Shedding light on PRISM</title>
    <link href="http://www-106.ibm.com/developerworks/xml/library/x-think13.html"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="RDF"/>
    <category term="Knowledge Management"/>
    <category term="PRISM"/>
    <category term="Dublin core"/>
    <category term="publishing"/>
    <category term="tech"/><updated>2002-10-01T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
PRISM is a standard for metadata related to publishing. It allows the formal description of content and related resources by providing standardized properties, controlled vocabularies, and extensibility mechanisms that enable users to define their own controlled vocabularies. In this column, Uche Ogbuji introduces PRISM by example.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www-106.ibm.com/developerworks/xml/edu/x-dw-x4suite4-i.html</id>
    <title>Develop Python/XML with 4Suite, Part 4: Composition and updates [tutorial]</title>
    <link href="http://www-106.ibm.com/developerworks/xml/edu/x-dw-x4suite4-i.html"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="4Suite"/>
    <category term="Python"/>
    <category term="XInclude"/>
    <category term="XPointer"/>
    <category term="XUpdate"/>
    <category term="XML Base"/>
    <category term="tech"/><updated>2002-10-01T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <author>
      <name/>
      <email>chimezie.ogbuji@fourthought.com</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
This tutorial actually spends more time on just explaining
XInclude/XPointer and XUpdate themselves than how to use them in 4Suite.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www-106.ibm.com/developerworks/xml/library/x-tipgenr.html</id>
    <title>Tip: Using generators</title>
    <link href="http://www-106.ibm.com/developerworks/xml/library/x-tipgenr.html"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="XML"/>
    <category term="DOM"/>
    <category term="Python"/>
    <category term="generators"/>
    <category term="tech"/><updated>2002-10-01T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
Generators are a very powerful new language feature of Python 2.2. In this tip, Uche Ogbuji presents a set of techniques for using generators for fast and lucid XML processing patterns in Python.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://adtmag.com/article.asp?id=6758</id>
    <title>Serenity through markup</title>
    <link href="http://adtmag.com/article.asp?id=6758"/>
    <link href="http://adtmag.com" rel="via" title="Application Development Trends"/>
    <category term="XML"/>
    <category term="Web services"/>
    <category term="tech"/><updated>2002-10-03T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
How to achieve interoperability in XML by not striving too hard for interoperability.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www.xml.com/pub/a/2002/09/25/py.html</id>
    <title>Python &amp; XML [column]: Introducing PyXML</title>
    <link href="http://www.xml.com/pub/a/2002/09/25/py.html"/>
    <link href="http://www.xml.com" rel="via" title="XML.com"/>
    <category term="XML"/>
    <category term="Python"/>
    <category term="PyXML"/>
    <category term="tech"/><updated>2002-09-25T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
In this article, I provide a tour of the PyXML package, with liberal
code examples.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www-106.ibm.com/developerworks/xml/library/x-tipxsltmp.html</id>
    <title>Tip: Multi-pass XSLT</title>
    <link href="http://www-106.ibm.com/developerworks/xml/library/x-tipxsltmp.html"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="XML"/>
    <category term="XSLT"/>
    <category term="EXSLT"/>
    <category term="node set"/>
    <category term="tech"/><updated>2002-10-01T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
Use the node-set extension to break down the XSLT operation into two or more passes.  Transforms can often be made cleaner and clearer if executed in phases or passes. First some intermediate output is produced, and then this is further transformed into a final output form. There can even be more than one intermediate form. In this tip, Uche Ogbuji discusses ways of breaking down XSLT operation into two or more clear passes of transformation using the common node-set extension.
    </div>
    </summary>
  </entry>
  <entry>
    <id>/tech/articles/past_present_future.pdf</id>
    <title>The Past, Present and Future of Web Services</title>
    <link href="/tech/articles/past_present_future.pdf"/>
    <link href="http://www.webservices.org" rel="via" title="WebServices.org"/>
    <category term="XML"/>
    <category term="Web Services"/>
    <category term="SOAP"/>
    <category term="WSDL"/>
    <category term="UDDI"/>
    <category term="CORBA"/>
    <category term="DCOM"/>
    <category term="tech"/><updated>2002-09-28T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
Those who find success using Web services will be those who understand the technology fundamentally: its motivations, the reasons why some components are winning out over others, and the likely course of maturity.  In part two of this 2-part series, Uche Ogbuji explores the foundation, current state, context and possible future of Web Services.
    </div>
    </summary>
  </entry>
  <entry>
    <id>/tech/articles/bulging-std.html</id>
    <title>Battle of the Bulging Standards</title>
    <link href="/tech/articles/bulging-std.html"/>
    <link href="http://www.sys-con.com/" rel="via" title="XML Journal"/>
    <category term="XML"/>
    <category term="W3C XML Schema language (WXS)"/>
    <category term="RELAX NG"/>
    <category term="XQuery"/>
    <category term="XSLT"/>
    <category term="XPath"/>
    <category term="tech"/><updated>2002-09-06T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
The many people and organizations who came to the XML industry from the database and software development industries have always wanted better standards for modeling the native data structures they interchange in XML. Some support for this was always likely in developing the XML Schema language that was expected to supplant XML 1.0 DTDs. Yet when drafts of the W3C XML Schema language (WXS) emerged, the mechanism provided for integrating with data type support proved immediately controversial.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www.intel.com/cd/ids/developer/asmo-na/eng/20286.htm</id>
    <title>The XML Menagerie</title>
    <link href="http://www.intel.com/cd/ids/developer/asmo-na/eng/20286.htm"/>
    <link href="http://developer.intel.com/" rel="via" title="Intel Developer Services"/>
    <category term="XML"/>
    <category term="XLink"/>
    <category term="XPointer"/>
    <category term="XML Schemas"/>
    <category term="WXS"/>
    <category term="XSDL"/>
    <category term="RELAX NG"/>
    <category term="tech"/><updated>2002-06-01T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
This article introduces more XML technologies that you might find quite useful: XLink, XPointer, W3C XML Schemas and RELAX NG. You'll find enough of an outline of each technology here to help you decide which to add to your toolbox.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www.xml.com/pub/a/2002/09/18/py.html</id>
    <title>Python &amp; XML [column]: The State of the Python-XML Art</title>
    <link href="http://www.xml.com/pub/a/2002/09/18/py.html"/>
    <link href="http://www.xml.com" rel="via" title="XML.com"/>
    <category term="XML"/>
    <category term="Python"/>
    <category term="tech"/><updated>2002-09-18T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
xml.com has launched a new column covering Python and XML. In the first article, Uche surveys the wealth of XML tools and resources available to the Python programmer, giving the reader a head start on the more in-depth topics to follow in later articles.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www-106.ibm.com/developerworks/xml/library/x-tiplocal.html</id>
    <title>Tip: Localization within a document format</title>
    <link href="http://www-106.ibm.com/developerworks/xml/library/x-tiplocal.html"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="XML"/>
    <category term="localization"/>
    <category term="ISO 8601"/>
    <category term="tech"/><updated>2002-09-01T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
Internationalization support is one of XML's key strengths. Unfortunately, too few XML formats provide mechanisms for localizing content. This tip shows you how to develop localized XML formats.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www-106.ibm.com/developerworks/xml/library/x-tipfxatt.html</id>
    <title>Tip: Using fixed attributes in XML vocabularies</title>
    <link href="http://www-106.ibm.com/developerworks/xml/library/x-tipfxatt.html"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="XML"/>
    <category term="fixed attributes"/>
    <category term="DTD"/>
    <category term="tech"/><updated>2002-09-01T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
Fixed attributes are not the most common feature in XML, but they can sometimes come in surprisingly handy. In this tip, Uche Ogbuji introduces fixed attributes and shows how they can be used to reduce the visibility of XML namespaces to authors.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www-106.ibm.com/developerworks/library/ws-pyth10/</id>
    <title>The Python Web services developer [column]: XML-RPC for Python</title>
    <link href="http://www-106.ibm.com/developerworks/library/ws-pyth10/"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="Python"/>
    <category term="XML-RPC"/>
    <category term="Web Services"/>
    <category term="tech"/><updated>2002-09-01T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <author>
      <name>Mike Olson</name>
      <email>mike.olson@fourthought.com</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
XML-RPC is a simple, lightweight Web services technology that predates SOAP. This month Mike Olson and Uche Ogbuji examine the XML-RPC facilities in Python.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www-106.ibm.com/developerworks/linux/library/l-apache/</id>
    <title>Connecting middleware to Apache 2.0</title>
    <link href="http://www-106.ibm.com/developerworks/linux/library/l-apache/"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="Apache 2.0"/>
    <category term="module"/>
    <category term="filter"/>
    <category term="pulldom"/>
    <category term="tech"/><updated>2002-08-01T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
Apache 2.0 has provided many API improvements. Uche Ogbuji gives an example of an Apache 2.0 filter module, and illustrates the new API by example.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www-106.ibm.com/developerworks/xml/library/x-jclark.html</id>
    <title>Keeping pace with James Clark: An interview (and analysis) with the leading authority on markup languages</title>
    <link href="http://www-106.ibm.com/developerworks/xml/library/x-jclark.html"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="James Clark"/>
    <category term="XML"/>
    <category term="SAX"/>
    <category term="DOM"/>
    <category term="pulldom"/>
    <category term="tech"/><updated>2002-07-01T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
James Clark is arguably the most accomplished developer in the world of markup languages. In his distinguished career of contributing to both SGML and XML, he has served on standards bodies, provided important practical perspectives on where markup meets traditional code, and most importantly, written many of the programs that have moved XML (and SGML before it) from the world of abstract speculation into hard practicality. In this article, Uche Ogbuji interviews James Clark, concentrating on a discussion of practical developments, current and future, in the world of XML. The author also provides his own analysis of the issues raised.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www-106.ibm.com/developerworks/xml/library/x-think12.html</id>
    <title>Thinking XML 12 [column]: Basic XML and RDF techniques for knowledge management, Part 7</title>
    <link href="http://www-106.ibm.com/developerworks/xml/library/x-think12.html"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="RDF"/>
    <category term="Knowledge Management"/>
    <category term="OMG"/>
    <category term="MDA"/>
    <category term="UML"/>
    <category term="tech"/><updated>2002-07-01T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
Uche Ogbuji takes a moment to review in a broader context the relevance of the XML/RDF techniques he has been presenting. He discusses the importance of XML/RDF interchange, of specialized RDF query, and of applying lessons from RDF modeling to overall application development. He also shows how this thread of the Thinking XML column relates to the parallel thread on developments toward semantic transparency.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www-106.ibm.com/developerworks/library/ws-pyth9/</id>
    <title>The Python Web services developer [column]: Messaging technologies compared</title>
    <link href="http://www-106.ibm.com/developerworks/library/ws-pyth9/"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="Python"/>
    <category term="SOAP"/>
    <category term="XML-RPC"/>
    <category term="sockets"/>
    <category term="CORBA"/>
    <category term="Web Services"/>
    <category term="tech"/><updated>2002-07-01T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <author>
      <name>Mike Olson</name>
      <email>mike.olson@fourthought.com</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
Choosing between technologies always involves trade-offs; often you sacrifice performance to gain ease of programming. Perhaps the realm of most interest to Web services developers is messaging technology. How can you balance speedy performance with human readability? Mike Olson and Uche Ogbuji don't claim to have the answer to this question, but they do offer some hard data to help you make the decision that best fits your needs. In this article, they help you compare some of the different messaging protocols available. You will write a simple application for each protocol and compare various measurements of speed, message overhead, and relative development time.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www-106.ibm.com/developerworks/library/ws-pyth8.html</id>
    <title>The Python Web services developer [column]: SOAP.py and ZSI can swap roles and prove Python's versatility</title>
    <link href="http://www-106.ibm.com/developerworks/library/ws-pyth8.html"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="Python"/>
    <category term="Web services"/>
    <category term="SOAP"/>
    <category term="SOAP.py"/>
    <category term="ZSI"/>
    <category term="Web Services"/>
    <category term="tech"/><updated>2002-06-01T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <author>
      <name>Mike Olson</name>
      <email>mike.olson@fourthought.com</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
In this installment of The Python Web services developer, Mike Olson gets back to writing some Python code. This column will revisit the example code from the fifth and sixth columns in this series, in which Mike and Uche Ogbuji talked about SOAP.py and ZSI, two available SOAP implementations in Python. Mike will continue the examination of these libraries and see how they interact with each other.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www-106.ibm.com/developerworks/xml/edu/x-dw-x4suite3-i.html</id>
    <title>Python and XML development using 4Suite, Part 3: 4RDF [tutorial]</title>
    <link href="http://www-106.ibm.com/developerworks/xml/edu/x-dw-x4suite3-i.html"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="4Suite"/>
    <category term="Python"/>
    <category term="RDF"/>
    <category term="tech"/><updated>2002-07-01T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <author>
      <name/>
      <email>chimezie.ogbuji@fourthought.com</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
4Suite is an open source, comprehensive library and toolkit for XML processing in Python. 4Suite implements various open standards related to XML. This series of tutorials introduces 4Suite and gives practical examples of XML development using 4Suite. Continuing from the earlier tutorial, this will go into detail on RDF, with hands-on examples of how to use the various RDF facilities available with Python. The open-source tool set 4RDF will be used as the primary tool in the examples.The tutorial includes a brief example of the advanced topic of RDF inference.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www-106.ibm.com/developerworks/xml/edu/x-dw-x4suit2-i.html</id>
    <title>Python and XML development using 4Suite, Part 2: 4XPath and 4XSLT [tutorial]</title>
    <link href="http://www-106.ibm.com/developerworks/xml/edu/x-dw-x4suit2-i.html"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="4Suite"/>
    <category term="Python"/>
    <category term="XML"/>
    <category term="XPath"/>
    <category term="XSLT"/>
    <category term="tech"/><updated>2002-05-01T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <author>
      <name/>
      <email>chimezie.ogbuji@fourthought.com</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
This tutorial introduces 4XPath and 4XSLT, open-source XPath and XSLT implementations written and provided by Fourthought Inc. in Python. Roughly the first half of the tutorial addresses XPath/4XPath whereas the second half covers XSLT/4XSLT. If you plan to use Python in association with XML processing, these are useful tools to get to know. 
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www-106.ibm.com/developerworks/xml/edu/x-dw-x4suite-i.html</id>
    <title>Python and XML development using 4Suite, Part 1: PyXml [tutorial]</title>
    <link href="http://www-106.ibm.com/developerworks/xml/edu/x-dw-x4suite-i.html"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="4Suite"/>
    <category term="Python"/>
    <category term="XML"/>
    <category term="DOM"/>
    <category term="PyXML"/>
    <category term="tech"/><updated>2002-03-01T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <author>
      <name/>
      <email>chimezie.ogbuji@fourthought.com</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
Many XML-related technologies are no more than specifications for a standard way for information to be processed and interpreted. This is no different with the Document Object Model (DOM), which provides a standard way for users to access and manipulate an XML document. There are various DOM implementations, in varying computer languages. Here, we will be introducing Fourthought's PyXml. This particular implementation is written in Python. 
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www.ddj.com/architect/184414544</id>
    <title>The Languages of the Semantic Web</title>
    <link href="http://www.ddj.com/architect/184414544"/>
    <link rel="seealso" href="http://www.newarchitectmag.com/documents/s=2453/new1020218556549/index.html"/>
    <link rel="seealso" href="http://www.drdobbs.com/architecture-and-design/184414544"/>
    <link href="http://www.newarchitectmag.com/" rel="via" title="New Architect Magazine"/>
    <category term="XML"/>
    <category term="RDF"/>
    <category term="DAML"/>
    <category term="Semantic Web"/>
    <category term="tech"/><updated>2002-06-01T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
Aimed at general Web professionals, this article discusses the ambitions behind Semantic Web efforts, and its related languages such as RDF.  It presents code and practical usage scenarios.
    </div>
    </summary>
  </entry>
  <entry>
    <id>/tech/articles/rdfws-paper.doc?xslt=/ftss/data/docbook_html1.xslt</id>
    <title>Using RDF for Web Services</title>
    <link href="/tech/articles/rdfws-paper.doc?xslt=/ftss/data/docbook_html1.xslt"/>
    <link href="http://idealliance.org" rel="via" title="Idealliance"/>
    <category term="Web services"/>
    <category term="RDF"/>
    <category term="WSDL"/>
    <category term="SOAP"/>
    <category term="UDDI"/>
    <category term="tech"/><updated>2001-12-01T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
The many factors that make RDF an excellent tool for knowledge management also make it an excellent tool for Web services infrastructure.  This paper provides an overview of RDF and the advantage it provides for Web services development.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://adtmag.com/article.asp?id=6393</id>
    <title>The many heads of XML modeling</title>
    <link href="http://adtmag.com/article.asp?id=6393"/>
    <link href="http://adtmag.com" rel="via" title="Application Development Trends"/>
    <category term="XML"/>
    <category term="MOF"/>
    <category term="UML"/>
    <category term="XMI"/>
    <category term="modeling"/>
    <category term="MDA"/>
    <category term="tech"/><updated>2002-06-14T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
XML, MDA, UML, MOF, XML, etc.  This menagerie is the future of modeling.  But first of all, there is some pruning to be done.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www-106.ibm.com/developerworks/xml/library/x-tipnamsp.html</id>
    <title>Tip: Namespaces and versioning</title>
    <link href="http://www-106.ibm.com/developerworks/xml/library/x-tipnamsp.html"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="XML"/>
    <category term="namespaces"/>
    <category term="versioning"/>
    <category term="tech"/><updated>2002-06-01T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
You can use several techniques for versioning XML schemas, such as defining special root attributes or using the DTD. This tip discusses how to use XML namespaces to version formats.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www-106.ibm.com/developerworks/library/l-ai/</id>
    <title>Introduction to Narval</title>
    <link href="http://www-106.ibm.com/developerworks/library/l-ai/"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="XML"/>
    <category term="Python"/>
    <category term="AI"/>
    <category term="artificial intelligence"/>
    <category term="narval"/>
    <category term="logilabs"/>
    <category term="tech"/><updated>2002-07-01T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
Uche Ogbuji introduces Narval, an open source application that allows users to handle information-management tasks. By providing a comprehensive autonomous agent for a variety of tasks, Narval has the potential to develop into a killer app for Linux.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www-106.ibm.com/developerworks/xml/library/x-think11.html</id>
    <title>Thinking XML 11 [column]: XML meets semantics - Will XML live up to its promise?</title>
    <link href="http://www-106.ibm.com/developerworks/xml/library/x-think11.html"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="OAG"/>
    <category term="Knowledge Management"/>
    <category term="DISA"/>
    <category term="government"/>
    <category term="tech"/><updated>2002-06-01T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
The success of XML as a basic data format is unquestioned. But much of the promise that accompanied XML 1.0 -- from unifying the ways businesses communicate with each other to making the Web more intelligent -- has not been attained. Using XML for shared semantics and thus shared knowledge is the theme of this column. In this installment, Mr. Ogbuji considers the progress to date along these lines in the context of recent developments from the Open Applications Group and the United States Department of Defense (DoD). 
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www-106.ibm.com/developerworks/xml/library/x-tipulldom.html</id>
    <title>Tip: Using pull-based DOMs</title>
    <link href="http://www-106.ibm.com/developerworks/xml/library/x-tipulldom.html"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="XML"/>
    <category term="DOM"/>
    <category term="Python"/>
    <category term="tech"/><updated>2002-05-01T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
XML application developers usually have to contend with the complexities of SAX or the inefficiencies of DOM. This tip shows how a pull approach to DOM can effectively bridge the gap between the two by offering simple, efficient parsing.
    </div>
    </summary>
  </entry>
  <entry>
    <id>/tech/articles/xml-europe-2002.pdf</id>
    <title>XML, The Model Driven Architecture, and RDF [PDF]</title>
    <link href="/tech/articles/xml-europe-2002.pdf"/>
    <link href="http://idealliance.org" rel="via" title="Idealliance"/>
    <category term="MDA"/>
    <category term="MOF"/>
    <category term="XML"/>
    <category term="XMI"/>
    <category term="RDF"/>
    <category term="UML"/>
    <category term="tech"/><updated>2002-05-01T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
This paper discuss how XML, RDF and MDA technologies come together to provide powerful patterns for solid and maintainable software design.  Also see the corresponding presentation slides from XML Europe 2002.  Also in HTML form at http://www.idealliance.org/papers/xmle02/dx_xmle02/papers/03-05-08/03-05-08.html
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www-106.ibm.com/developerworks/xml/library/x-tipnodst.html</id>
    <title>Tip: Counting with node sets</title>
    <link href="http://www-106.ibm.com/developerworks/xml/library/x-tipnodst.html"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="XML"/>
    <category term="XSLT"/>
    <category term="tech"/><updated>2002-05-01T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
Many common XSLT tasks, including simple loops, can be made easier by using special properties of node set operations. This tip discusses using node sets for simple and efficient loop control.
    </div>
    </summary>
  </entry>
  <entry>
    <id>/tech/articles/whatarews.html</id>
    <title>An Introduction to Web services</title>
    <link href="/tech/articles/whatarews.html"/>
    <link href="http://www.isgmlug.org/" rel="via" title="Interchange, newsletter of the International SGML/XML Users' Group (ISUG)"/>
    <category term="Web Services"/>
    <category term="tech"/><updated>2001-06-01T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
Many companies involved in electronic business transactions have been working on ways to take advantage of inexpensive Internet protocols (such as HTTP, HTTPs, SMTP and S/MIME), extensible and generic data formats (XML, in particular) and component techniques (such as object and interface repositories) in order to make electronic commerce a pervasive reality.  These developments are collective known as Web services.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www-106.ibm.com/developerworks/library/ws-pyth7.html</id>
    <title>The Python Web services developer [column]: 10th International Python Conference</title>
    <link href="http://www-106.ibm.com/developerworks/library/ws-pyth7.html"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="Python"/>
    <category term="Web services"/>
    <category term="SOAP"/>
    <category term="CORBA"/>
    <category term="conference"/>
    <category term="4Suite"/>
    <category term="Web Services"/>
    <category term="tech"/><updated>2002-04-01T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <author>
      <name>Mike Olson</name>
      <email>mike.olson@fourthought.com</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
In this article we take a short break from writing code and talk about some of the happenings at Python 10 Web Services track.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www.xml.com/pub/a/2002/01/30/daml1.html</id>
    <title>Introduction to DAML: Part I</title>
    <link href="http://www.xml.com/pub/a/2002/01/30/daml1.html"/>
    <link href="http://www.xml.com" rel="via" title="XML.com"/>
    <category term="RDF"/>
    <category term="DAML+OIL"/>
    <category term="tech"/><updated>2002-01-30T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <author>
      <name>Roxane Ouellet</name>
      <email>roxane.ouellet@fourthought.com</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
This article series introduces DAML, including practical examples and basic design principles. This first article presents basic DAML concepts and constructs, explaining the most useful modeling tools DAML puts into the designer's hands.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www.xml.com/pub/a/2002/03/13/daml.html</id>
    <title>Introduction to DAML: Part II</title>
    <link href="http://www.xml.com/pub/a/2002/03/13/daml.html"/>
    <link href="http://www.xml.com" rel="via" title="XML.com"/>
    <category term="RDF"/>
    <category term="DAML+OIL"/>
    <category term="tech"/><updated>2002-03-13T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <author>
      <name>Roxane Ouellet</name>
      <email>roxane.ouellet@fourthought.com</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
This article series introduces DAML, including practical examples and basic design principles.  This second article offers a more in-depth look, introducing more advanced features.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www.xml.com/pub/a/2002/05/01/damlref.html</id>
    <title>Introduction to DAML: Part III</title>
    <link href="http://www.xml.com/pub/a/2002/05/01/damlref.html"/>
    <link href="http://www.xml.com" rel="via" title="XML.com"/>
    <category term="RDF"/>
    <category term="DAML+OIL"/>
    <category term="tech"/><updated>2002-05-01T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <author>
      <name>Roxane Ouellet</name>
      <email>roxane.ouellet@fourthought.com</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
This third installment of our series looking at the DARPA Agent Markup Language provides a quick reference for concepts from RDF, RDF Schema and DAML.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www-106.ibm.com/developerworks/xml/library/x-think10/index.html</id>
    <title>Thinking XML 10 [column]: Jump-starting knowledge management with RDF, part 6: RDF Query using Versa</title>
    <link href="http://www-106.ibm.com/developerworks/xml/library/x-think10/index.html"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="RDF"/>
    <category term="Knowledge Management"/>
    <category term="Versa"/>
    <category term="tech"/><updated>2002-04-01T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
Uche Ogbuji moves on to a discussion of a far more sophisticated RDF query language than the primitive API he has discussed thus far. This is the foundation for establishing the middleware for the Issue Tracker article in coming installments.
    </div>
    </summary>
  </entry>
  <entry>
    <id>/tech/articles/ws-metadata.html</id>
    <title>Powering Web Services Through Metadata </title>
    <link href="/tech/articles/ws-metadata.html"/>
    <link href="http://www.webservicesarchitect.com/" rel="via" title="Web Services Architect"/>
    <category term="Web Services"/>
    <category term="RDF"/>
    <category term="SOAP"/>
    <category term="WSDL"/>
    <category term="UDDI"/>
    <category term="tech"/><updated>2002-02-28T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
 One of the most important requirements for highly automated Web Services is a rich description mechanism. In order to narrow down the negotiation and discovery of services that fit a particular contractual and technical profile, this information needs to be made available in an accessible way for machine processing. There have been several initiatives to develop systems for encoding and querying such Web Service descriptions, among them the Web Services Description Language (WSDL) and Universal Description, Discovery, and Integration (UDDI).

These data formats define a vocabulary for service descriptions, automation, rules, and processing, and perhaps the quickest route towards practical implementation of Web Services is to take advantage of RDF: the W3C's system for managing such vocabularies. This paper discusses how to use RDF for rapid implementation of Web Services based on the emerging standards such as WSDL, UDDI, and ebXML.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www.intel.com/cd/ids/developer/asmo-na/eng/19169.htm</id>
    <title>Taking Applications to the Next Level with XML, Part 5: One part code, one part XML, two parts knowledge</title>
    <link href="http://www.intel.com/cd/ids/developer/asmo-na/eng/19169.htm"/>
    <link href="http://developer.intel.com/" rel="via" title="Intel Developer Services"/>
    <link rel="alternate" href="http://software.intel.com/en-us/articles/one-part-code-one-part-xml-two-parts-knowledge/"/>
    <category term="XML"/>
    <category term="RDF"/>
    <category term="RSS"/>
    <category term="tech"/><updated>2002-04-08T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
This article discusses a key companion technology to XML toward the goal of knowledge management: the Resource Description Framework (RDF). One of the most successful applications of RDF is RDF Site Summary (RSS), which we'll use as an example.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www.intel.com/cd/ids/developer/asmo-na/eng/20259.htm</id>
    <title>Taking Applications to the Next Level with XML, Part 3: The Toolbox of XML APIs</title>
    <link href="http://www.intel.com/cd/ids/developer/asmo-na/eng/20259.htm"/>
    <link href="http://developer.intel.com/" rel="via" title="Intel Developer Services"/>
    <link rel="alternate" href="http://software.intel.com/en-us/articles/taking-applications-to-the-next-level-with-xml-part-3-the-toolbox-of-xml-apis/"/>
    <category term="XML"/>
    <category term="SAX"/>
    <category term="DOM"/>
    <category term="tech"/><updated>2002-02-28T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
One of the most important areas is in Application Programming Interfaces (APIs) that bind XML technologies to other programming and run-time environments. In this article, we shall look closely at the two preeminent APIs for XML: Simple API for XML (SAX) and Document Object Model (DOM). They represent two strongly contrasting processing models for XML, and as such have quite complementary sets of advantages and disadvantages.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www.intel.com/cd/ids/developer/asmo-na/eng/20271.htm</id>
    <title>Taking Applications to the Next Level with XML, Part 4: XSLT--Programming by Transform</title>
    <link href="http://www.intel.com/cd/ids/developer/asmo-na/eng/20271.htm"/>
    <link href="http://developer.intel.com/" rel="via" title="Intel Developer Services"/>
    <link rel="alternate" href="http://software.intel.com/en-us/articles/taking-applications-to-the-next-level-with-xml-part-4-xslt-programming-by-transform/"/>
    <category term="XML"/>
    <category term="XPath"/>
    <category term="XSLT"/>
    <category term="tech"/><updated>2002-03-22T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
Mr. Ogbuji introduces a new tool into the XML developer's pouch: Extensible Stylesheet Language Transformations (XSLT). 
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www.intel.com/cd/ids/developer/asmo-na/eng/20264.htm</id>
    <title>Taking Applications to the Next Level with XML, Part 2</title>
    <link href="http://www.intel.com/cd/ids/developer/asmo-na/eng/20264.htm"/>
    <link href="http://developer.intel.com/" rel="via" title="Intel Developer Services"/>
    <link rel="alternate" href="http://software.intel.com/en-us/articles/taking-applications-to-the-next-level-with-xml-part-2/"/>
    <category term="XML"/>
    <category term="Application development"/>
    <category term="tech"/><updated>2002-01-17T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
Uche Ogbuji discusses some of the basic characteristics of XML as a format for input, output, and intermediate management of semi-structured data in situations typically dealt with by programmers.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www.intel.com/cd/ids/developer/asmo-na/eng/20265.htm</id>
    <title>Taking Applications to the Next Level with XML, Part 1</title>
    <link href="http://softwarecommunity.intel.com/articles/eng/2339.htm"/>
    <link rel="alternate" href="http://www.intel.com/cd/ids/developer/asmo-na/eng/20265.htm"/>
    <link href="http://developer.intel.com/" rel="via" title="Intel Developer Services"/>
    <link rel="alternate" href="http://software.intel.com/en-us/articles/taking-applications-to-the-next-level-with-xml-part-1/"/>
    <category term="XML"/>
    <category term="tech"/><updated>2001-12-07T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
In this five-part series I shall look at some of this new thinking. Primarily, I shall be discussing where and how XML is best used by application programmers in order to solve implementation issues, but I shall also discuss how XML can help fundamentally change how applications are developed: a change for the better.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://adtmag.com/article.asp?id=6004</id>
    <title>WSDL and the Wild, Wild West</title>
    <link href="http://adtmag.com/article.asp?id=6004"/>
    <link href="http://adtmag.com" rel="via" title="Application Development Trends"/>
    <category term="RDF"/>
    <category term="MDA"/>
    <category term="WSDL"/>
    <category term="Web services"/>
    <category term="tech"/><updated>2002-04-06T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
 More than any other recent development, XML has introduced a Wild West atmosphere to Internet technologies. It causes rapid turnover in development trends, inspires people to stake claims on territory without trying to cooperate with others to maximize its usefulness, and it brings about startling successes in all the chaos. Some would say Web services are a perfect example of all three of these traits.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www-106.ibm.com/developerworks/webservices/library/ws-soaprdf/</id>
    <title>Using RDF with SOAP</title>
    <link href="http://www-106.ibm.com/developerworks/webservices/library/ws-soaprdf/"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="RDF"/>
    <category term="SOAP"/>
    <category term="Web services"/>
    <category term="tech"/><updated>2002-02-01T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
This article examines ways that SOAP can be used to communicate information in RDF models. It discusses ways of translating the fundamental data in RDF models to the SOAP encoding for PC-like exchange, or for directly passing parts of the model in RDF/XML serialized form.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www-106.ibm.com/developerworks/webservices/library/ws-wsdlrdf/</id>
    <title>Managing structured Web service metadata</title>
    <link href="http://www-106.ibm.com/developerworks/webservices/library/ws-wsdlrdf/"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="RDF"/>
    <category term="WSDL"/>
    <category term="Web services"/>
    <category term="tech"/><updated>2002-04-01T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
This article builds on an earlier developerWorks article on using the Resource Description Framework (RDF) to enhance WSDL, and related to a recent article on using SOAP with RDF. Uche Ogbuji looks at how updates in WSDL affect the techniques presented earlier, and draws on the significant discussion of RDF and Web services description to show how developers can use both to their advantage.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www-106.ibm.com/developerworks/xml/library/x-think9.html</id>
    <title>Thinking XML 9 [column]: Basic XML and RDF techniques for knowledge management</title>
    <link href="http://www-106.ibm.com/developerworks/xml/library/x-think9.html"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="RDF"/>
    <category term="Knowledge Management"/>
    <category term="DAML+OIL"/>
    <category term="tech"/><updated>2002-03-01T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
Uche Ogbuji moves on to define RDF and DAML+OIL schemata for the issue tracker application, continuing the discussion of modeling as he goes along.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www-106.ibm.com/developerworks/xml/library/x-think8.html</id>
    <title>Thinking XML 8 [column]: Basic XML and RDF techniques for knowledge management</title>
    <link href="http://www-106.ibm.com/developerworks/xml/library/x-think8.html"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="RDF"/>
    <category term="Knowledge Management"/>
    <category term="XML"/>
    <category term="tech"/><updated>2002-02-01T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
Uche Ogbuji continues his exploration of how RDF combines with XML to enable knowledge management. In this installment, he takes an in-depth look at modeling in the RDF world, and begins to look at developing a schema for the issue tracker and how it is similar to and different from object-oriented and relational modeling. The reader will learn various tips, techniques, and best practices for developing effective knowledge management models from XML data.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www-106.ibm.com/developerworks/xml/library/x-think7.html</id>
    <title>Thinking XML 7 [column]: Once again round the block (An updated survey of semantic transparency in XML)</title>
    <link href="http://www-106.ibm.com/developerworks/xml/library/x-think7.html"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="RDF"/>
    <category term="UBL"/>
    <category term="xCBL"/>
    <category term="cXML"/>
    <category term="Knowledge Management"/>
    <category term="XML"/>
    <category term="tech"/><updated>2002-01-01T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
Once again, this column takes a break to look at what's new and what has been neglected in the normal run of discussion. This time, Uche Ogbuji examines a couple of older XML schema systems for common business transactions that are overdue for a look (xCBL, cXML), as well as a new entry to the field (UBL), and some updates in the wide world of RDF.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www-106.ibm.com/developerworks/xml/library/x-think6.html</id>
    <title>Thinking XML 6 [column]: Basic XML and RDF techniques for knowledge management</title>
    <link href="http://www-106.ibm.com/developerworks/xml/library/x-think6.html"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="RDF"/>
    <category term="Knowledge Management"/>
    <category term="tech"/><updated>2001-11-01T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
This column, the third in a series, shows how to add semantic knowledge to an RDF application by incorporating WordNet synonym sets. With the added knowledge of the WordNet lexical database, you can search a set of RDF data for related concepts, not just one keyword at a time. As the demonstration issue-tracker application shows, that means searching once for instances that fit within the concept of "selection" rather than searching individually on "vote," "choice," "ballot," and 86 other related terms. Columnist Uche Ogbuji's sample code in Python illustrates the techniques.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www-106.ibm.com/developerworks/xml/library/x-think5/index.html</id>
    <title>Thinking XML 5 [column]: Basic XML and RDF techniques for knowledge management</title>
    <link href="http://www-106.ibm.com/developerworks/xml/library/x-think5/index.html"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="RDF"/>
    <category term="XML"/>
    <category term="Knowledge Management"/>
    <category term="tech"/><updated>2001-09-01T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
This Thinking XML column shows how to combine metadata collected from multiple XML source documents into a single Resource Description Framework (RDF) model for effective querying. In this follow-up to his previous installment that introduced how to use XML and RDF together for knowledge management, columnist Uche Ogbuji builds on the techniques for populating RDF models with data from existing XML formats. The centerpiece of this discussion is an example in which a Web-based issue tracker, originally developed to manipulate application data in XML, is extended to take advantage of RDF. Sample code listings in XSLT and Python demonstrate two methods of aggregating metadata from XML files into a single RDF model (one using XSLT and the other using RDF), and examples of simple RDF queries.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www-106.ibm.com/developerworks/xml/library/x-think4/index.html</id>
    <title>Thinking XML 4 [column]: Basic XML and RDF techniques for knowledge management</title>
    <link href="http://www-106.ibm.com/developerworks/xml/library/x-think4/index.html"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="RDF"/>
    <category term="XML"/>
    <category term="Knowledge Management"/>
    <category term="tech"/><updated>2001-07-01T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
Columnist Uche Ogbuji begins his practical exploration of knowledge management with XML by illustrating techniques for populating Resource Description Framework (RDF) models with data from existing XML formats. As shown in the three code listings, RDF can be used as a companion to customized XML, not just as a canonical representation for certain types of data. This column, with code samples included, demonstrates how easy it can be to jump-start knowledge management with RDF even relatively late in the development game.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www-106.ibm.com/developerworks/library/ws-pyth6/</id>
    <title>The Python Web services developer [column]: Python SOAP libraries part 2</title>
    <link href="http://www-106.ibm.com/developerworks/library/ws-pyth6/"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="Python"/>
    <category term="Web services"/>
    <category term="SOAP"/>
    <category term="tech"/><updated>2002-02-01T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <author>
      <name>Mike Olson</name>
      <email>mike.olson@fourthought.com</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
Continuing their look at Python SOAP implementations, Mike Olson and Uche Ogbuji put the Zolera SOAP Infrastructure (ZSI) through its paces as a SOAP client and server library. They find that ZSI is possibly the best tool for SOAP use under Python right now.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www-106.ibm.com/developerworks/library/ws-pyth5/</id>
    <title>The Python Web services developer [column]: Python SOAP libraries part 1</title>
    <link href="http://www-106.ibm.com/developerworks/library/ws-pyth5/"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="Python"/>
    <category term="Web services"/>
    <category term="SOAP"/>
    <category term="tech"/><updated>2001-09-01T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <author>
      <name>Mike Olson</name>
      <email>mike.olson@fourthought.com</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
In this first of a two-part series, Web services columnists Mike Olson and Uche Ogbuji discuss the various SOAP implementations available for Python, giving detailed code examples.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www-106.ibm.com/developerworks/webservices/library/co-pyxp3/</id>
    <title>Getting started with PyXPCOM, part 3</title>
    <link href="http://www-106.ibm.com/developerworks/webservices/library/co-pyxp3/"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="Python"/>
    <category term="Mozilla"/>
    <category term="XPCOM"/>
    <category term="Components"/>
    <category term="tech"/><updated>2001-06-01T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
Cross-platform component object model (XPCOM) is the component system developed in the Mozilla project. ActiveState has developed an open-source Python library for XPCOM. This three-part series provides a developer's introduction to XPCOM programming in Python. Part 3 covers the use of PyXPCOM to implement XPCOM objects on the server side.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www-106.ibm.com/developerworks/webservices/library/co-pyxp2.html</id>
    <title>Getting started with PyXPCOM, part 2</title>
    <link href="http://www-106.ibm.com/developerworks/webservices/library/co-pyxp2.html"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="Python"/>
    <category term="Mozilla"/>
    <category term="XPCOM"/>
    <category term="Components"/>
    <category term="tech"/><updated>2001-06-01T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
Cross-platform component object model (XPCOM) is the component system developed in the Mozilla project. ActiveState has developed an open-source Python library for XPCOM. This three-part series provides a developer's introduction to XPCOM programming in Python. This second part covers the use of PyXPCOM as a client to XPCOM objects.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www-106.ibm.com/developerworks/components/library/co-pyxp1.html</id>
    <title>Getting started with PyXPCOM, part 1</title>
    <link href="http://www-106.ibm.com/developerworks/components/library/co-pyxp1.html"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="Python"/>
    <category term="Mozilla"/>
    <category term="XPCOM"/>
    <category term="Components"/>
    <category term="tech"/><updated>2001-05-01T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
Cross-platform component object model (XPCOM) is the component system developed in the Mozilla project. ActiveState has developed an open-source Python library for XPCOM. This three-part series provides a developer's introduction to XPCOM programming in Python. This first part covers installation of PyXPCOM.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www-106.ibm.com/developerworks/webservices/library/ws-pyth4/</id>
    <title>The Python Web services developer [column]: Web services software repository, Part 3</title>
    <link href="http://www-106.ibm.com/developerworks/webservices/library/ws-pyth4/"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="Python"/>
    <category term="Web services"/>
    <category term="SOAP"/>
    <category term="WSDL"/>
    <category term="4Suite"/>
    <category term="Web Services"/>
    <category term="tech"/><updated>2001-07-01T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <author>
      <name>Mike Olson</name>
      <email>mike.olson@fourthought.com</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
In this third and final article about building a software repository implemented as a Web service, Mike Olson and Uche Ogbuji extend the software repository to broadcast its presence using WSDL.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www-106.ibm.com/developerworks/webservices/library/ws-pyth3/</id>
    <title>The Python Web services developer [column]: Web services software repository, Part 2</title>
    <link href="http://www-106.ibm.com/developerworks/webservices/library/ws-pyth3/"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="Python"/>
    <category term="Web services"/>
    <category term="SOAP"/>
    <category term="WSDL"/>
    <category term="4Suite"/>
    <category term="Web Services"/>
    <category term="tech"/><updated>2001-05-01T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <author>
      <name>Mike Olson</name>
      <email>mike.olson@fourthought.com</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
Continuing their example of a Web service for storing and managing software, Uche Ogbuji and Mike Olson illustrate how to update the repository using SOAP messages and how to advertise it as a Web service.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www-105.ibm.com/developerworks/education.nsf/components-onlinecourse-bytitle/12CFA14A2B9575B086256A4200627CD6</id>
    <title>Bridging XPCOM/Bonobo - implementation [tutorial]</title>
    <link href="http://www-105.ibm.com/developerworks/education.nsf/components-onlinecourse-bytitle/12CFA14A2B9575B086256A4200627CD6"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="Python"/>
    <category term="XPCOM"/>
    <category term="Bonobo "/>
    <category term="Components"/>
    <category term="Buxom"/>
    <category term="CORBA"/>
    <category term="COM"/>
    <category term="tech"/><updated>2001-05-01T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
This dW-exclusive tutorial introduces Buxom, an XPCOM/Bonobo bridge. This is the second of two tutorials on bridging
                       XPCOM/Bonobo, the first is Bridging XPCOM/Bonobo - techniques.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www-105.ibm.com/developerworks/education.nsf/components-onlinecourse-bytitle/85AACA6C27A8EF0886256A42006109E0</id>
    <title>Bridging XPCOM/Bonobo - techniques [tutorial]</title>
    <link href="http://www-105.ibm.com/developerworks/education.nsf/components-onlinecourse-bytitle/85AACA6C27A8EF0886256A42006109E0"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="Python"/>
    <category term="XPCOM"/>
    <category term="Bonobo "/>
    <category term="Components"/>
    <category term="Buxom"/>
    <category term="CORBA"/>
    <category term="COM"/>
    <category term="tech"/><updated>2001-05-01T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
This dW-exclusive tutorial introduces the concepts and techniques required for bridging two component architectures, so that the
                       components from one architecture can be used in another environment. This is the first of two tutorials on bridging XPCOM/Bonobo, the
                       second is Bridging XPCOM/Bonobo - implementation. 
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www-106.ibm.com/developerworks/xml/library/x-think3.html</id>
    <title>Thinking XML 3 [column]: XML meets semantics: The reality (part 3)</title>
    <link href="http://www-106.ibm.com/developerworks/xml/library/x-think3.html"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="XML"/>
    <category term="Knowledge Management"/>
    <category term="Semantics"/>
    <category term="ebXML"/>
    <category term="RosettaNet"/>
    <category term="metadata"/>
    <category term="tech"/><updated>2001-05-01T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
Uche Ogbuji discusses several recent events in XML semantic transparency and XML
       knowledge management, including new developments in ebXML and RosettaNet.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www-106.ibm.com/developerworks/xml/library/x-think2.html</id>
    <title>Thinking XML 2 [column]: XML meets semantics: The reality</title>
    <link href="http://www-106.ibm.com/developerworks/xml/library/x-think2.html"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="XML"/>
    <category term="Knowledge Management"/>
    <category term="Semantics"/>
    <category term="RDF"/>
    <category term="EDI"/>
    <category term="RosettaNet"/>
    <category term="metadata"/>
    <category term="tech"/><updated>2001-04-01T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
In this column, Uche Ogbuji completes his introduction to XML and semantics, setting the stage for the more
       practical columns that will follow. Thinking XML addresses knowledge management aspects of XML, including metadata,
       semantics, Resource Description Framework (RDF), Topic Maps, and autonomous agents. Approaching the topic from a
       practical perspective, the column aims to reach programmers rather than philosophers.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www-106.ibm.com/developerworks/components/library/co-devcn.html</id>
    <title>Where components fit into the picture at XML DevCon</title>
    <link href="http://www-106.ibm.com/developerworks/components/library/co-devcn.html"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="XML"/>
    <category term="Components"/>
    <category term="COM"/>
    <category term="CORBA"/>
    <category term="Web Services"/>
    <category term="tech"/><updated>2001-04-01T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
XML DevCon is, of course, all about XML. But since it's geared towards developer education, component technologies from COM to CORBA and beyond are inevitable parts of the picture. At XML DevCon Spring 2001 it seemed everyone wanted a piece of the emerging field of Web services. Uche Ogbuji reports from the front lines, sorting out the fresh meat from the vapor.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www-106.ibm.com/developerworks/webservices/library/ws-pyth2/</id>
    <title>The Python Web services developer [column]: Web Services Software Repository, Part 1</title>
    <link href="http://www-106.ibm.com/developerworks/webservices/library/ws-pyth2/"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="Python"/>
    <category term="Web services"/>
    <category term="SOAP"/>
    <category term="WSDL"/>
    <category term="4Suite"/>
    <category term="Web Services"/>
    <category term="tech"/><updated>2001-03-01T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <author>
      <name>Mike Olson</name>
      <email>mike.olson@fourthought.com</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
This is the beginning of a short series on creating a software repository system built on Web services and developed in the Python programming language. Mike Olson shows you the details of using the 4Suite open-source XML server with Python to create Web service-based applications.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www.unixinsider.com/unixinsideronline/swol-03-2001/swol-0309-4Suite.html</id>
    <title>Introducing the 4Suite Server</title>
    <link href="http://www.unixinsider.com/unixinsideronline/swol-03-2001/swol-0309-4Suite.html"/>
    <link href="http://www.unixinsider.com" rel="via" title="UNIX Insider"/>
    <category term="Python"/>
    <category term="4Suite"/>
    <category term="UNIX"/>
    <category term="XML"/>
    <category term="XSLT"/>
    <category term="RDF"/>
    <category term="Web"/>
    <category term="tech"/><updated>2001-03-05T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
Over the last few months, Uche Ogbuji has covered XML and its applicability to Unix professionals in various articles for Unix Insider. In this feature, Uche continues to share his work on XML with our readers by introducing the 4Suite Server, the tool that most nearly realizes XML's goal of standardizing and simplifying data processing. (4,000 words)
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www-106.ibm.com/developerworks/xml/library/x-think1.html</id>
    <title>Thinking XML 1 [column]: XML meets semantics: The reality</title>
    <link href="http://www-106.ibm.com/developerworks/xml/library/x-think1.html"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="XML"/>
    <category term="Knowledge Management"/>
    <category term="Semantics"/>
    <category term="RDF"/>
    <category term="EDI"/>
    <category term="BizTalk"/>
    <category term="ebXML"/>
    <category term="metadata"/>
    <category term="tech"/><updated>2001-02-01T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
This discussion of XML and semantics kicks off a column by Uche Ogbuji on knowledge management aspects of XML, including metadata, semantics, Resource Description Framework (RDF), Topic Maps, and autonomous agents. Approaching the topic from a practical perspective, the column aims to reach programmers rather than philosophers.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www-105.ibm.com/developerworks/education.nsf/components-onlinecourse-bytitle/52CEEC8554DB0C1586256A0D005A6E41</id>
    <title>XML messaging with SOAP [tutorial]</title>
    <link href="http://www-105.ibm.com/developerworks/education.nsf/components-onlinecourse-bytitle/52CEEC8554DB0C1586256A0D005A6E41"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="SOAP"/>
    <category term="XML"/>
    <category term="HTTP"/>
    <category term="Components"/>
    <category term="Python"/>
    <category term="4Suite"/>
    <category term="tech"/><updated>2001-02-01T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
The previous tutorial in this series showed how to use custom XML messages for component communication. To help the developer avoid reinventing the wheel over and over, many interested parties have developed proposals for standardized XML messaging. The front runner in this race is Simple Object Access Protocol (SOAP), a specification for XML-based communications between objects. SOAP can be used with HTTP, and this tutorial shows how to use a SOAP library for relatively painless component communications.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www.linuxworld.com/story/32934.htm</id>
    <title>Practical XML with Linux, Part 3: XML database tools for Linux</title>
    <link href="http://www.linuxworld.com/story/32934.htm"/>
    <link href="http://www.linuxworld.com" rel="via" title="LinuxWorld"/>
    <category term="Linux"/>
    <category term="XML"/>
    <category term="DBMS"/>
    <category term="Database"/>
    <category term="4Suite"/>
    <category term="tech"/><updated>2001-02-08T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
Your stash of XML documents is probably growing exponentially. Uche Ogbuji 
provides an overview of database types, then surveys the wide range of tools 
available for storing and managing XML data stores.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www-106.ibm.com/developerworks/library/x-xsltip.html</id>
    <title>Tip: XSLT lookup tables</title>
    <link href="http://www-106.ibm.com/developerworks/library/x-xsltip.html"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="XML"/>
    <category term="XSLT"/>
    <category term="tech"/><updated>2001-02-01T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
Lookup tables, a common programming tool, efficiently transform one value to 
another. In this tip learn how to implement lookup tables in XSLT. A basic 
understanding of XSLT is required.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www-106.ibm.com/developerworks/library/x-tipxslt.html</id>
    <title>Tip: Generating internal HTML links with XSLT</title>
    <link href="http://www-106.ibm.com/developerworks/library/x-tipxslt.html"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="XML"/>
    <category term="XSLT"/>
    <category term="HTML"/>
    <category term="tech"/><updated>2001-02-01T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
Uche Ogbuji walks you through how to use XSLT to populate HTML or XHTML
output with anchors and internal links. Internal links help to organize
long HTML content; XSLT provides facilities for generating those internal
links, but some of the methods are somewhat obscure. This tip, with reusable
sample code, clearly spells out two approaches for the process.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www-106.ibm.com/developerworks/library/x-tipxrdf.html</id>
    <title>Tip: Documenting style sheets using RDF</title>
    <link href="http://www-106.ibm.com/developerworks/library/x-tipxrdf.html"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="RDF"/>
    <category term="XSLT"/>
    <category term="tech"/><updated>2001-02-01T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
Uche Ogbuji shows how to use Resource Description Framework (RDF) to document your XSLT style sheets and discusses some of the powerful applications that can be made of this structured documentation. This tip assumes that you already have a basic knowledge of XSLT and RDF.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www-106.ibm.com/developerworks/library/co-tutintro.html</id>
    <title>Introduction to XML messaging</title>
    <link href="http://www-106.ibm.com/developerworks/library/co-tutintro.html"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="Messaging"/>
    <category term="XML"/>
    <category term="HTTP"/>
    <category term="Components"/>
    <category term="Python"/>
    <category term="4Suite"/>
    <category term="SOAP"/>
    <category term="DOM"/>
    <category term="IDL"/>
    <category term="tech"/><updated>2001-02-01T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
There have been many components technologies available to developers, but 
most of them have relied on network co-location, or proprietary connections to 
language or platform. As components increasingly are designed to be accessed 
over the Internet, it be comes more and more important that component 
technologies have the openness, and use the protocols, that make up Internet 
infrastructure. For this reason, XML messaging is emerging as an important 
component technology.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www-105.ibm.com/developerworks/education.nsf/components-onlinecourse-bytitle/19CEA37A7099DFFC862569D50063163C</id>
    <title>Introduction to IDL</title>
    <link href="http://www-105.ibm.com/developerworks/education.nsf/components-onlinecourse-bytitle/19CEA37A7099DFFC862569D50063163C"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="IDL"/>
    <category term="Components"/>
    <category term="Python"/>
    <category term="CORBA"/>
    <category term="DOM"/>
    <category term="tech"/><updated>2001-02-01T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
CORBA Interface Definition Language (IDL), is the prevalent language used for 
defining how components connect together. Beyond its use in CORBA systems, it 
has proven a popular way to describe platform and language-neutral connection 
interfaces, including the core API for XML, the Document Object Model (DOM). 
Even variations on IDL, such as that used by Component Object Model (COM) tend 
to be similar to IDL. Understanding IDL brings rdf:about key insights to many of 
the techniques of component programming.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www-105.ibm.com/developerworks/education.nsf/components-onlinecourse-bytitle/75278B140ACC5FA0862569EA006A8B4D</id>
    <title>Basic HTTP for distributed components</title>
    <link href="http://www-105.ibm.com/developerworks/education.nsf/components-onlinecourse-bytitle/75278B140ACC5FA0862569EA006A8B4D"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="IDL"/>
    <category term="Components"/>
    <category term="HTTP"/>
    <category term="Python"/>
    <category term="tech"/><updated>2001-02-01T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
Hypertext Transport Protocol (HTTP) is the communications protocol of the 
Web. If you are writing any infrastructure applications for Internet 
development, this introduction will be useful.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www-105.ibm.com/developerworks/education.nsf/components-onlinecourse-bytitle/601681DFBDBD06E2862569F1004DB6B9</id>
    <title>Introduction to XML messaging (tutorial)</title>
    <link href="http://www-105.ibm.com/developerworks/education.nsf/components-onlinecourse-bytitle/601681DFBDBD06E2862569F1004DB6B9"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="Messaging"/>
    <category term="XML"/>
    <category term="HTTP"/>
    <category term="Components"/>
    <category term="Python"/>
    <category term="4Suite"/>
    <category term="tech"/><updated>2001-02-01T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
XML is quickly emerging as the standard data format for Internet technology. 
It is also very popular for the broader range of component technologies. XML 
is a useful way to introduce structure into the body of HTTP requests. This 
tutorial gives hands-on examples of XML messaging. It will be useful for 
anyone contemplating ways of communicating between components using Web 
protocols.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www-106.ibm.com/developerworks/library/ws-pyth1.html?dwzone=ws</id>
    <title>The Python Web services developer [column]: The world of Python Web services</title>
    <link href="http://www-106.ibm.com/developerworks/library/ws-pyth1.html?dwzone=ws"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="Mike Olson"/>
    <category term="Python"/>
    <category term="Web services"/>
    <category term="SOAP"/>
    <category term="WSDL"/>
    <category term="4Suite"/>
    <category term="Web Services"/>
    <category term="tech"/><updated>2001-02-01T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <author>
      <name>Mike Olson</name>
      <email>mike.olson@fourthought.com</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
Python's motto has always been "batteries included," referring to the large 
array of standard libraries and facilities that come with the language 
installation. This article presents an overview and survey of tools and 
facilities available for Web services development in Python. This includes 
built-in Python features and third-party open-source tools.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www-4.ibm.com/software/developer/library/ws-trans/index.html?dwzone=ws</id>
    <title>WSDL processing with XSLT (First steps for Web service description processing)</title>
    <link href="http://www-4.ibm.com/software/developer/library/ws-trans/index.html?dwzone=ws"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="WSDL"/>
    <category term="Web services"/>
    <category term="SOAP"/>
    <category term="XSLT"/>
    <category term="RDF"/>
    <category term="4Suite"/>
    <category term="tech"/><updated>2000-11-01T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
Building on earlier articles introducing Web Services Description Language (WSDL) and an RDF application based on WSDL, this article shows ways of using Extensible Stylesheet Language for Transforms (XSLT) to process WSDL in various ways. Familiarity with XSLT and Resource Description Framework (RDF) are required. Resources introducing XSLT are provided.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www-4.ibm.com/software/developer/library/ws-rdf/index.html?dwzone=ws</id>
    <title>Supercharging WSDL with RDF (Managing structured Web service metadata)</title>
    <link href="http://www-4.ibm.com/software/developer/library/ws-rdf/index.html?dwzone=ws"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="WSDL"/>
    <category term="Web services"/>
    <category term="SOAP"/>
    <category term="RDF"/>
    <category term="4Suite"/>
    <category term="tech"/><updated>2000-11-01T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
The Resource Description Framework is the World Wide Web Consortium's official format for defining the metadata of XML objects. Conceptually, it is similar to Web Services Description Language, which is a collection of metadata rdf:about XML-based services. This article focuses on building a bridge between the two specifications. It provides an example of what a Web service description might look like as an RDF file. It then goes on to discuss how to take advantage of an RDF visualization tool to generate a graph of the WSDL data.  Finally, it presents a portion of a possible RDF Schema for WSDL.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www-4.ibm.com/software/developer/library/ws-soap/index.html?dwzone=ws</id>
    <title>Using WSDL in SOAP applications</title>
    <link href="http://www-4.ibm.com/software/developer/library/ws-soap/index.html?dwzone=ws"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="WSDL"/>
    <category term="Web services"/>
    <category term="SOAP"/>
    <category term="tech"/><updated>2000-11-01T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
Web Services Description Language (WDSL) is a new specification to describe networked XML-based services. It provides a simple way for service providers to describe the basic format of requests to their systems regardless of the underlying protocol (such as Simple Object Access Protocol or XML) or encoding (such as Multipurpose Internet Messaging Extensions). WSDL is a key part of the effort of the Universal Description, Discovery and Integration (UDDI) initiative to provide directories and descriptions of such on-line services for electronic business. This article provides a brief background and technical introduction to WSDL.  Knowledge of XML and XML Namespaces is required and some familiarity with XML Schemas and SOAP is useful.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www-106.ibm.com/developerworks/xml/library/w-rdf/</id>
    <title>An introduction to RDF</title>
    <link href="http://www-106.ibm.com/developerworks/xml/library/w-rdf/"/>
    <link href="http://www.ibm.com/developerworks" rel="via" title="IBM developerWorks"/>
    <category term="RDF"/>
    <category term="XML"/>
    <category term="metadata"/>
    <category term="tech"/><updated>2000-12-01T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
 This article introduces Resource Description Framework (RDF), developed by the W3C for Web-based metadata, using XML as an interchange syntax. RDF's essential aim is to make work easier for autonomous agents, which would refine the Web by improving search engines and service directories. Author Uche Ogbuji gives an overview of RDF aspects from schemas to usage scenarios. The article assumes that you are already familiar with XML.
    </div>
    </summary>
  </entry>
  <entry>
    <id>/tech/articles/svgpres.html</id>
    <title>SVG: What comes after XML?</title>
    <link href="/tech/articles/svgpres.html"/>
    <link href="http://www.unixinsider.com" rel="via" title="UNIX Insider"/>
    <category term="SVG"/>
    <category term="XML"/>
    <category term="UNIX"/>
    <category term="presentation"/>
    <category term="4Suite"/>
    <category term="tech"/><updated>2000-10-23T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
Are PowerPoint's days numbered? Author Uche Ogbuji introduces Scalable Vector Graphics (SVG) and demonstrates how to use Sun's new presentation toolkit for sharper slide presentations. (3,900 words)
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www.xml.com/2000/10/11/rdf/index.html</id>
    <title>4RDF: A Library for Web Metadata</title>
    <link href="http://www.xml.com/2000/10/11/rdf/index.html"/>
    <link href="http://www.xml.com" rel="via" title="XML.com"/>
    <category term="4RDF"/>
    <category term="RIL"/>
    <category term="Python"/>
    <category term="XML"/>
    <category term="4Suite"/>
    <category term="tech"/><updated>2000-10-11T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
One of the jewels in the crown of Python's XML support is the 4Suite collection of libraries, the most recent addition to which is 4RDF, a library for the parsing, querying, and storage of RDF.
    </div>
    </summary>
  </entry>
  <entry>
    <id>/tech/articles/schematron.html</id>
    <title>Introducing the Schematron: A fresh approach to XML validation and reporting</title>
    <link href="/tech/articles/schematron.html"/>
    <link href="http://www.unixinsider.com" rel="via" title="UNIX Insider"/>
    <category term="Schematron"/>
    <category term="Schemas"/>
    <category term="XSLT"/>
    <category term="XML"/>
    <category term="4Suite"/>
    <category term="validation"/>
    <category term="tech"/><updated>2000-09-01T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
Judging from the ongoing developments and debates rdf:about XML document validation, it's evident the language is in flux. In this article, writer and consultant Uche Ogbuji gets a handle on some of these changes and introduces the Schematron, a new validation and reporting methodology and toolkit (4,200 words).
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www.itworld.com/AppDev/125/LWD000919db2/</id>
    <title>IBM's DB2 Universal Database 7.1 for Linux shines</title>
    <link href="http://www.itworld.com/AppDev/125/LWD000919db2/"/>
    <link href="http://www.linuxworld.com" rel="via" title="LinuxWorld"/>
    <category term="Linux"/>
    <category term="DBMS"/>
    <category term="DB2"/>
    <category term="tech"/><updated>2000-09-01T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
A few installation kinks aside, IBM's DB2 Universal Database 7.1 for Linux impresses with its superior ease of use, stability, and variety of tools (3,300 words)
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www.linuxworld.com/linuxworld/lw-2000-08/lw-08-xml2tools.html</id>
    <title>Practical XML with Linux, Part 2: A survey of tools</title>
    <link href="http://www.linuxworld.com/linuxworld/lw-2000-08/lw-08-xml2tools.html"/>
    <link href="http://www.linuxworld.com" rel="via" title="LinuxWorld"/>
    <category term="Linux"/>
    <category term="XML"/>
    <category term="tech"/><updated>2000-08-01T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
XML's popularity as a document-exchange format has soared recently. 
Uche Ogbuji surveys the vast menagerie of sometimes remarkably polished 
tools available for creating and serving XML documents. (3,100 words) 
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www.linuxworld.com/linuxworld/lw-2000-04/lw-04-oracle8i.html</id>
    <title>A practical guide to Oracle 8i for Linux</title>
    <link href="http://www.linuxworld.com/linuxworld/lw-2000-04/lw-04-oracle8i.html"/>
    <link href="http://www.linuxworld.com" rel="via" title="LinuxWorld"/>
    <category term="Linux"/>
    <category term="DBMS"/>
    <category term="Oracle"/>
    <category term="tech"/><updated>2000-04-01T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
If you've been having trouble installing Oracle8i, be bewildered no longer. Uche Ogbuji
                              explains why Oracle8i is one of the wildest, wooliest installs ever, and how to work around
                              its quirks. (3,300 words) 
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www.linuxworld.com/linuxworld/lw-2000-03/lw-03-corba2.html</id>
    <title>Introduction to CORBA, Part 2</title>
    <link href="http://www.linuxworld.com/linuxworld/lw-2000-03/lw-03-corba2.html"/>
    <link href="http://www.linuxworld.com" rel="via" title="LinuxWorld"/>
    <category term="Mike Olson"/>
    <category term="CORBA"/>
    <category term="Linux"/>
    <category term="Components"/>
    <category term="tech"/><updated>2000-03-01T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
CORBA encompasses a series of standards and protocols for interprocess communication
                              in a heterogeneous environment. Using CORBA, developers can easily write applications for
                              many different operating systems at once, in any number of languages. It thus comes as no
                              surprise that the CORBA specification has caught on so quickly as the standard for
                              interprocess communication. Mike Olson is your guide through an introduction to CORBA in
                              this second part of a two-part series. (3,500 words)
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www.linuxworld.com/linuxworld/lw-1999-10/lw-10-sqlanywhere.html</id>
    <title>A developer's introduction to Sybase SQL Anywhere Studio</title>
    <link href="http://www.linuxworld.com/linuxworld/lw-1999-10/lw-10-sqlanywhere.html"/>
    <link href="http://www.linuxworld.com" rel="via" title="LinuxWorld"/>
    <category term="Linux"/>
    <category term="DBMS"/>
    <category term="Sybase"/>
    <category term="tech"/><updated>1999-10-01T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
    LinuxWorld author Uche Ogbuji applies his considerable database knowledge
    to this review of the new release of Sybase's SQL Anywhere. Features,
    strengths, weaknesses, and installation and management tips are
    highlighted as Uche gives Sybase a thorough database workout, which
    includes a SQLC primer to get you started with database programming with C.
    (3,500 words)
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www.cnn.com/TECH/computing/9910/01/practical.xml.idg/</id>
    <title>Practical XML with Linux, Part 1</title>
    <link href="http://www.cnn.com/TECH/computing/9910/01/practical.xml.idg/"/>
    <link href="http://www.linuxworld.com" rel="via" title="LinuxWorld"/>
    <link href="http://www.cnnstudentnews.cnn.com/TECH/computing/9910/01/practical.xml.idg/index.html" rel="seealso"/>
    <category term="XML"/>
    <category term="Linux"/>
    <category term="tech"/><updated>1999-09-01T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
    Uche Ogbuji shows you how to make use of XML to create a better platform
    for data and document exchange in your enterprise. (3,200 words)
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www.linuxworld.com/linuxworld/lw-1999-09/lw-09-corba_1.html</id>
    <title>Introduction to CORBA, Part 1</title>
    <link href="http://www.linuxworld.com/linuxworld/lw-1999-09/lw-09-corba_1.html"/>
    <link href="http://www.linuxworld.com" rel="via" title="LinuxWorld"/>
    <category term="Mike Olson"/>
    <category term="CORBA"/>
    <category term="Linux"/>
    <category term="Components"/>
    <category term="tech"/><updated>1999-09-01T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
    The first in a two part series on using CORBA on the Linux platform.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www.linuxworld.com/linuxworld/lw-1999-08/lw-08-business.html</id>
    <title>Getting down to business at LinuxWorld</title>
    <link href="http://www.linuxworld.com/linuxworld/lw-1999-08/lw-08-business.html"/>
    <link href="http://www.linuxworld.com" rel="via" title="LinuxWorld"/>
    <category term="Linux"/>
    <category term="tech"/><updated>1999-08-01T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
    Is business embracing open source, or is open source embracing business?
    At the recent LinuxWorld Conference and Expo, Uche Ogbuji asked several
    business vendors rdf:about their commercial Linux products, and how they've
    adapted open source methodologies within the enterprise. Find out how
    they answered in this special report. (2,000 words) 
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www.pythonjournal.com/pyj/pyj1/Ogbuji-intranetpython-V1.html</id>
    <title>Intranet Python [column]: Python Tools for the Enterprise Intranet</title>
    <link href="http://www.pythonjournal.com/pyj/pyj1/Ogbuji-intranetpython-V1.html"/>
    <link href="http://www.pythonjournal.com" rel="via" title="Python Journal"/>
    <category term="Python"/>
    <category term="Web"/>
    <category term="Intranet"/>
    <category term="tech"/><updated>1999-07-01T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
    A broad survey of Python tools for development of enterprise Intranets.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www.pythonjournal.com/pyj/pyj1/OgbujiYOlson/Ogbuji_XML4DOM.html</id>
    <title>Manipulating HTML Using 4DOM</title>
    <link href="http://www.pythonjournal.com/pyj/pyj1/OgbujiYOlson/Ogbuji_XML4DOM.html"/>
    <link href="http://www.pythonjournal.com" rel="via" title="Python Journal"/>
    <category term="Python"/>
    <category term="HTML"/>
    <category term="4DOM"/>
    <category term="Web"/>
    <category term="tech"/><updated>1999-07-01T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <author>
      <name>Mike Olson</name>
      <email>mike.olson@fourthought.com</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
    Description of the 4DOM module for XML and HTML manipulation,
    with the emphasis on the HTML API.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www.linuxjournal.com/lj-issues/issue62/3178.html</id>
    <title>Linux in an ERP World</title>
    <link href="http://www.linuxjournal.com/lj-issues/issue62/3178.html"/>
    <link href="http://www.linuxjournal.com" rel="via" title="Linux Journal"/>
    <category term="Linux"/>
    <category term="ERP"/>
    <category term="Enterprise"/>
    <category term="tech"/><updated>1999-06-01T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
    "Mr. Ogbuji takes a look at enterprise resource
    planning and Linux's place in this market."
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www.linuxworld.com/linuxworld/lw-1999-06/lw-06-oracle.html</id>
    <title>How to get Oracle up and running on your Linux box</title>
    <link href="http://www.linuxworld.com/linuxworld/lw-1999-06/lw-06-oracle.html"/>
    <link href="http://www.linuxworld.com" rel="via" title="LinuxWorld"/>
    <category term="Linux"/>
    <category term="Oracle"/>
    <category term="DBMS"/>
    <category term="Database"/>
    <category term="tech"/><updated>1999-06-01T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
    "When Oracle announced its port of Oracle 8 and Oracle Application Server
    for Linux late last year, it was an unmistakable sign that the world
    must now reckon with Linux as a serious operating system for enterprise
    use. Uche Ogbuji explains how to install, configure, and begin to work
    and play with this powerful database tool. (3,500 words)"
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www.linuxworld.com/linuxworld/lw-1999-03/lw-03-xml.html</id>
    <title>There is more to XML than roll-your-own HTML</title>
    <link href="http://www.linuxworld.com/linuxworld/lw-1999-03/lw-03-xml.html"/>
    <link rel="seealso" href="http://web.archive.org/web/20001013052905/http://www.linuxworld.com/linuxworld/lw-1999-03/lw-03-xml.html"/>
    <link rel="seealso" href="http://web.archive.org/web/20001013070102/http://www.linuxworld.com/linuxworld/lw-1999-03/lw-03-xml-2.html"/>
    <link href="http://www.linuxworld.com" rel="via" title="LinuxWorld"/>
    <category term="Linux"/>
    <category term="XML"/>
    <category term="tech"/><updated>1999-03-01T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
    Explanation of various XML-related standards and XML implementations
    available to Linux users, and why Linux must adopt XML now if it is to
    become a premiere platform for data and document exchange in the enterprise.
    </div>
    </summary>
  </entry>
  <entry>
    <id>/tech/articles/xmledi.html</id>
    <title>XML: The future of EDI?</title>
    <link href="/tech/articles/xmledi.html"/>
    <link href="http://www.unixinsider.com" rel="via" title="UNIX Insider"/>
    <category term="EDI"/>
    <category term="XML"/>
    <category term="UNIX"/>
    <category term="E-commerce"/>
    <category term="tech"/><updated>1999-02-01T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
    IT managers have long complained rdf:about the complexity and expense of EDI
    A vocal and growing group of professionals is advancing XML as the
    solution to these woes, and the key to the broader adoption of EDI.
    Is this just another car in the hype train, or does XML have a legitimate
    chance to revamp EDI? As in many areas where Internet technologies
    collide with traditional business, change is inevitable, but the results
    are rarely as clear as anticipated.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www.linuxjournal.com/lj-issues/issue55/2934.html</id>
    <title>Linux for Internet Business Applications</title>
    <link href="http://www.linuxjournal.com/lj-issues/issue55/2934.html"/>
    <link href="http://www.linuxjournal.com" rel="via" title="Linux Journal"/>
    <category term="Intranet"/>
    <category term="Internet"/>
    <category term="Linux"/>
    <category term="tech"/><updated>1998-11-01T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
Experiences putting together an Internet and Intranet for a medium-sized call-center outsourcing firm.
    </div>
    </summary>
  </entry>
  <entry>
    <id>http://www.linuxworld.com/linuxworld/lw-1998-10/lw-10-y2k.html</id>
    <title>Linux in the New Millennium</title>
    <link href="http://www.linuxworld.com/linuxworld/lw-1998-10/lw-10-y2k.html"/>
    <link href="http://www.linuxjournal.com" rel="via" title="Linux Journal"/>
    <category term="Y2K"/>
    <category term="Linux"/>
    <category term="tech"/><updated>1998-10-01T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
How the infamous year-2000 bug affects Linux professionals.
    </div>
    </summary>
  </entry>
  <entry>
    <id>/tech/articles/oop-ll.pdf</id>
    <title>An Object-Oriented Language Engine</title>
    <link href="/tech/articles/oop-ll.pdf"/>
    <link href="pctech" rel="via" title="PC Techniques"/>
    <category term="object oriented"/>
    <category term="C++"/>
    <category term="parser"/>
    <category term="tech"/><updated>1995-10-01T12:00:00Z</updated>
    <author>
      <name>Uche Ogbuji</name>
      <uri>http://uche.ogbuji.net</uri>
      <email>uche@ogbuji.net</email>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
How to develop parsers using polymorphism rather than switch statements.
    </div>
    </summary>
  </entry>
</feed>
